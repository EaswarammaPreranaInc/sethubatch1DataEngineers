# difference()   method  demo  program  
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . difference(b)
print(c) # {10 , 20 }
print(type(c)) # <class set>
d = a - b
print(d) # {10 , 20 }
print(type(d)) # <class set>
print(c  is  d) # False
print(c  ==  d) # True

# symmetric_difference()   method  demo  program  
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . symmetric_difference(b) 
print(c) # {10 , 20 , 50 , 60}
print(type(c)) # <class set>
d = a ^ b
print(d) # {10 , 20 , 50 , 60}
print(type(d)) # <class set>
print(c   is   d) # False
print(c  ==   d) # True

# Find  outputs  
a = {x * x  for   x   in   range(10)}
print(a) # {0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81}
print(type(a)) # <class set>

#Write  a  program  to  remove  duplicate  characters  of  the  string  using  set
a=input("enter any string:")
b=set(a)
print(b)
c=''.join(b)
print(c)

output...
enter any string:rama rao
{'m', 'r', 'a', ' ', 'o'}
mra o

#Write  a  program  to  remove  duplicate  elements  of   list  using  set
a=eval(input("enter list:"))
b=set(a)
c=list(b)
print("result:",c)

output...
enter list:[False , 25 , 10.8 , 1  , 25 , 0 , 'Hyd' ,  10.8 , 1.0 , None , 'Sec' , 'Hyd' , True  ]
result: [False, 1, None, 'Hyd', 'Sec', 10.8, 25]

#Write  a  program  to  print  distinct  vowels  of  the  string  by  using  set
a=input("enter any name:").upper()
b='AEIOU'
d=set(a)
c=''
for i in b:
    if i in d and i not in c:
        c+=i
print("resulu:",c)

output...
enter any name:ramarao
AO


#Write  a  program  to   obtain  common  elements  between  two  lists  using  sets
a=eval(input("enter 1st list:")) 
b= eval(input("enter 2nd list:"))
c=set(a)
d=set(b)
e=c.intersection(d)
print(e)

output...
enter 1st list:[10,20,30,40,50,60]
enter 2nd list:[30 , 40 , 70 , 80 , 20]
{40, 20, 30}

#  How  to  access  values  of  dictionary 
a  =  {'Empno'  :  25 ,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(How  to  print  value  25  in  dict  'a') # print(a.get('Empno'))
print(How  to  print  'Rama Rao'  in  dict  'a') # print(a.get('Ename'))
print(How  to  print  value  1000.65   in  dict  'a') # print(a.get('Sal'))

# How  to  modify  values  of  dictionary  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a) # {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(id(a)) # random address
How  to  modify  1000.65  to  2000 # a['Sal']=2000  
How  to  modify  'Rama  Rao'  to  'Sita' # a['Ename']='sita'
How  to  modify  25   to  35 # a['Empno']=35
print(a) #  {'Empno'  :  35,  'Ename'  :  'sita'  ,  'Sal'  :  2000  }
print(id(a)) # same address 

#  How  to  append  key : value  pairs  to dictionary  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a) # {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
How  to  append  'Gender' : 'M'  to  dictionary  'a' # a['gender']='M'
How  to  append  'Married' :  True  to  dictionary  'a' # a['Married']=True
print(a) # {'Empno': 25, 'Ename': 'Rama  Rao', 'Sal': 1000.65, 'gender': 'M', 'Married': True}

# Find  outputs (Home  work)
a = { }
How  to  append  10 : 'Rama'  to  dictionary  'a' # a[10]='Rama'
How  to  append  20 : 'Sita'  to  dictionary  'a' # a[20]='Sita'
How  to  append  15 : 'Rajesh'  to  dictionary  'a' # a[15]='Rajesh'
How  to  append  18 : 'Kiran'  to  dictionary  'a' # a[18]='Kiran'
print(a) # {10:'Rama',20:'Sita',15:'Rajesh',18:'Kiran'}

#  How  to  remove  key : value  pairs  of  dictionary  (Home  work)
a =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a) # {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
How  to  remove  'Sal' : 1000.65  from  dictionary  'a' #a.pop('Sal') 
print(a) # Empno'  :  25,  'Ename'  :  'Rama  Rao' }


#  in  and  not  in  operators  (Home  work)
a =  {10 : 20 , 30 : 40 , 50 : 60 , 70 : 80}
print(30  in  a . keys()) # True
print(60  in  a . keys()) # False
print(60  in  a . values()) # True
print(30  in  a . values()) # # False
print(50  in  a) # True
print(20  in  a) # False
print(70  not  in  a . keys()) # False
print(40  not  in  a . values()) # False
print(25  not  in  a) # True

#  What  are  the  outputs  if  input  is  {10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
a = input('Enter  dictionary  :  ')
print(a) #  {10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
print(type(a)) # <class dict>
b = eval(a) 
print(b) #  {10: 'A', 20: 'D', 15: 'C' }
print(type(b)) # <class dict>

#  Find  outputs  (Home  work)
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh' , 18 : 'Kiran'}
b = {**a}
print(b) # {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh' , 18 : 'Kiran'}
print(a  is  b) # False
print(a  ==  b) # True
c = a
print(a  is   c) # True
print(a  ==  c) # True

#Find  outputs  (Home  work)
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh'}
b = {18 : 'Kiran' , 14 : 'Amar' , 20  : 'Manohar'}
c = {25 : 'Ramesh' , 19 : 'Krishna' , 15 : 'Radha' , 14 : 'Srinivas'}
d = {*a , *b , *c}
print(d) # {10,20,15,18,14,25,19}
print(type(d)) # <class dict>
e = {**a , **b , **c}
print(e) # {10:'Rama' , 20 :'Manohor' , 15 : 'Radha' , 18 : 'Kiran' , 14 : 'Srinivas' , 25 : 'Ramesh' , 19 : 'Krishna'}
print(type(e)) # <class dict>

#  Find  outputs  (Home  work)
a = {10 : 20 , 30 : 40}
b = {30 : 50 , 10 : 60}
#print(a + b)
c = {**a , **b}
print(c) # {10 : 60 , 30 : 50}
d = a | b
print(d) # # {10 : 60 , 30 : 50}

#Write  a  program  to  create  a  dictionary  with  emp  names  and  salaries
a={}
a['AAA']=10000
a['BBB']=20000
a['CCC']=15000
a['DDD']=18000
print(a)

output...
{'AAA': 10000, 'BBB': 20000, 'CCC': 15000, 'DDD': 18000}


# len()  function  demo  program  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(len(a)) # 3
b = {}
print(len(b)) # 0

#  sum()  function demo  program  (Home  work)
a = {10 : 20 , 30 : 40 , 50 : 60}
print(sum(a . keys())) # 90
print(sum(a . values())) # 120
print(sum(a)) # 90
print(sum(a . items())) # Error we cannot add items

# max()  and  min()   functions  demo  program  (Home  work)
a = {10 : 20 , 30 : 25 , 40 : 5 , 7 : 28 , 9 : 50}
print(max(a . keys())) # 40
print(min(a . keys())) # 7
print(max(a . values())) # 50
print(min(a . values())) # 5
print(max(a . items())) # 40:5
print(min(a . items())) # 7:8
print(max(a)) # 40
print(min(a)) # 7


#  dict()  function  demo program (Home  work))
a = [ (10 , 'Hyd') , (20 , 'Sec') , (15 , 'Cyb') , (20 , 'Pune')]  #  List of  tuples
b = dict(a) #  Converts  list  of  tuples  to  dict
print(b)  #  {10 : 'Hyd', 20 : 'Pune' , 15 : 'Cyb'}
c = ( ['R' , 'Red'] , ['G' , 'Green'] , ['B' , 'Blue'] , ['G' , 'Gray'])
d = dict(c)
print(d) # {'R': 'Red' , 'G'='Gray' , 'B'='Blue'} 
e = [[10 , 20 , 30] , [40 , 50 , 60] , [70 , 80 , 90]]
print(dict(e)) # Error
f = [[10] , [20] , [30]]
print(dict(f)) # Error
print(dict([10 , 20]))
g = [[10 , [20 , 30]] , [40 , [50 , 60]] , [70 , [80 , 90]]]
print(dict(g)) # Error
h = [[[10 , 20] , 30] , [[40 , 50] , 60] , [[70 , 80] , 90]]
print(dict(h)) # Error
i = [[(10 , 20) , 30] , [(40 , 50) , 60] , [(70 , 80) , 90]]
print(dict(i)) # {(10,20):30,(40,50):60,(70,80):90}


# sorted()  function  (Home  work)
a = {10 : 'Red' , 20 : 'Green' , 15 : 'Blue' , 18 : 'Yellow' , 5 : 'White'}
b = sorted(a . keys())
print(b) # [5 , 10 , 15 , 18 , 20] 
c = sorted(a . values())
print(c) # ['Blue' , 'Green' , 'Red' , 'White' , 'Yellow']
d = sorted(a . items())
print(d) # [(5 ,'White'), (10 ('Red') , (15 , 'Blue') ,(18 , 'Yellow'),(20 , 'Green')]  
f  = sorted(a  , reverse = True)
print(f) # [20 ,18 ,15,10 ,5]
print(a) # {10 : 'Red' , 20 : 'Green' , 15 : 'Blue' , 18 : 'Yellow' , 5 : 'White'}


#Write  a  program  to  sort  dictionary  wrt  keys
a = {10 : 'A' , 20 : 'B' , 15 : 'C' , 5 : 'D' , 12 : 'E'}
b = sorted(a . items()) 
c=dict(b)
print(c)

output...
{5: 'D', 10: 'A', 12: 'E', 15: 'C', 20: 'B'}


#  keys()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . keys()
print(b) # ([10 , 20 , 15 , 18])
print(type(b)) # <class dict_keys>
for  x  in   b:
        print(x) # 10 
	           20 
		   15 
		   18

# values()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . values()
print(b) # (['Hyd','Sec','Cyb','Pune'])
print(type(b)) # <class dict_values>
for  x   in   b:
	print(x) # 'Hyd'
		   'Sec'
		   'Cyb'
		   'Pune'

#  items()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . items()
print(b) # ([10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'])
print(type(b)) # <class dict_items>
for  x   in   b:
        print(x) # (10 : 'Hyd')
	           (20 : 'Sec')
		   (15 : 'Cyb')
		   (18 : 'Pune')
for  x , y   in  b:
        print(x , y , sep = ' ... ') # 10 : 'Hyd'
	                               20...'Sec'
				       15...'Cyb'
	                               18...'Pune'

# clear()  method  demo  program (Home  work)
a = {10 : 20 , 30 : 40 , 50 : 60}
print(a) # {10 : 20 , 30 : 40 , 50 : 60}
a . clear()
print(a) # {}
del  a
print(a) # Error a is not defined


# copy()  method demo  program  (Home  work)
a = {'R' : 'Red' , 'G' : 'Green' , 'B' : 'Blue'}
b = a . copy()
print(b) #{'R' : 'Red' , 'G' : 'Green' , 'B' : 'Blue'} 
print(a  is  b) # False
print(a  ==  b) # True

#  Find  outputs  (Home  work)
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh'}
x , y , z = a . keys()
print(x) # 10
print(y) # 20
print(z) # 15
print() # Empty
x , y , z = a . values()
print(x) # 'Rama'
print(y) # 'Sita'
print(z) # 'Rajesh'
print() # Empty 
x , y ,  z = a . items()
print(x) # 10 , 'Rama'
print(y) #  20 , 'Sita'
print(z) # 15 , 'Rajesh'
print() # Empty
(rno1 , sname1) , (rno2 , sname2) , (rno3 , sname3) = a . items()
print(rno1 , sname1) # 10 'Rama'
print(rno2 , sname2) # 20 'Sita'
print(rno3 , sname3) # 15 'Rajesh'

# Find outputs (Home  work)
a = [ ('R' , 'Red') , ('G' , 'Green') , ('B' , 'Blue')]
b = {'Y' : 'Yellow', 'G' : 'Gray'}
b . update(a)
print(b) # [ ('R' , 'Red') , ('G' , 'Green') , ('B' , 'Blue') , ('Y' ,'Yellow') ]
a . update(b)

#  Find  outputs  (Home  work)
a = [ (10 , 20 , 30) , (40 , 50 , 60) , (70 , 80 , 90)]
b = {}
b.update(a)
print(b) # Error
c = [(10,) , (20,) , (30,)]
b . update(c)
print(b) # Error


#  Find  outputs (Home  work)
d = {x : x ** 3   for    x   in  range(5)}
print(d) # {0:0,1:1,2:8,3:27,4:64}
print(type(d)) # <class dict>

# Find outputs   (Home  work)
d = { x :  2 * x    for    x   in   range(5) }
print(d) # {0:0 , 1:2 , 2:4 , 3:6 , 4:8}

# Find outputs  (Home  work)
a = {10 : 'Rama' , 15 : 'Sita' , 18 : 'Rajesh' , 17 : 'Kiran' , 12 : 'Rama Rao'}
b = { k :  v  for   k , v  in   a .items()   if    k % 2 != 0}
print(b) # {15 : 'Sita' , 17 : 'Kiran'}
c = {k : a[k]   for   k   in    a    if   a[k] . startswith('R')}
print(c) # {10 : 'Rama' , 18 : 'Rajesh' , 12 : 'Rama Rao'}

# Write  a program  to  determine  frequency  of  each  alphabet  in  the  string   in   alphabetical  order  (ignoring  the  case)
a=input("enter any name:").upper()
b={}
for i in a:
	if (i.isalpha()):
		b[i]=b.get(i,0)+1

print(dict(sorted(b.items())))

output...
enter any name:rama rao
{'A': 3, 'M': 1, 'O': 1, 'R': 2}

