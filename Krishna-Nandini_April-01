Program-1
# Write  a  generator  to  yield  sum , difference , product  and  division  of  2  numbers
# Hint:  Use  generator  function  and  for  loop  to  retrieve  elements
def math (a, b):
    yield ("Sum", a + b)
    yield ("Difference", a - b)
    yield ("Product", a * b)
    yield ("Division", a / b if b != 0 else "Division by zero is not permitted")
a = int(input("Enter first number: "))
b = int(input("Enter second number: "))
gen = math (a, b)
for operation, result in gen:  
    print(f"{operation}: {result}")

'''
Output:
Enter first number: 10
Enter second number: 0
Sum: 10
Difference: 10
Product: 0
Division: Division by zero is not permitted

Enter first number: 10
Enter second number: 7
Sum: 17
Difference: 3
Product: 70
Division: 1.4285714285714286
'''


Program-2
# Design  a  generator  to  yield  from  x (may  be  10)  to   y (may  be  20)
# Hint:  Use  generator  function  and  for  loop
# Hint:  Do  not  use  range  object
import time
def f1(start, end):
    while start <= end:
        yield start
        start += 1
x = int(input("Enter start value: "))
y = int(input("Enter end value: "))
g = f1(x, y)
for m in g:
	print(m)
	time.sleep(1)

'''
Output:
Enter start value: 5
Enter end value: 10
5
6
7
8
9
10
'''


Program-3
# Write  a  generator  to  divide  a  string  into  words
# Hint1:  Use  generator  function  and  for   loop
# Hint2:  Use  split()  method  of  str  class
import time
def f1(a):
	list=s.split()
	for word in list:
		yield word
s=input("enter a string:")
g=f1(s)
print("words of string")
for x in g:
	print(x)
	time.sleep(1)

'''
Output:
enter a string:hyd is green city
words of string
hyd
is
green
city
'''


Program-4
# Write  a   generator  to  generate  fibonacci  series
1) What  is  fibonacci  series ?  --->  0 , 1 , 1 , 2 , 3 , 5 , 8 , .....
2) What  is  the  formula  for  10th  term ?  ---> 9th  term + 8th  term
    What  is  the  formula  for  3rd  term ?  ---> 2nd  term + 1st  term
3) What  are  the  first  two  terms ?  ---> 0  and  1
4) Use  generator  function  and  for  loop

import time
def fib(x):
	a,b=0,1
	yield a
	yield b
	while True:
		c=a+b
		if c>x:
			break
		yield c
		a=b
		b=c
x=int(input("what is last term:"))
g=fib(x)
for k in g:
	print(k)
	time.sleep(1)

'''
Output:
what is last term:10
0
1
1
2
3
5
8
'''


Program-5
# Find  outputs
def   f1():
        yield   [10 , 20]
        yield  {30 , 40 , 50}
        yield  60  , 70 , 80 , 90
        yield  100
# End  of  generator
g = f1()
for   x   in   g:
	print(x)
	print(type(x))

'''
Output:
[10, 20]
<class 'list'>
{40, 50, 30}
<class 'set'>
(60, 70, 80, 90)
<class 'tuple'>
100
<class 'int'>
'''


Program-6
#  Find  outputs
def   f1():
	x = 1
	while  x <=  100000000000000000000:
		yield  x
		x +=  1
# End of  generator
g = f1()
print('Begin')
#print(*g)   # *g is not recommended
print('End')

'''
Output:
Begin
MemoryError
'''


Program-7
# Find outputs
g = (x * x  for  x  in  range(500000000000000000))
print(*g)  # MemoryError


Program-8
# Find outputs
def  f1():
	print('One')
	yield    1
	print('Two')
	yield    2
	print('Three')
	yield    3
	print('End')
# End  of  generator
g = f1()
for   m   in   g:
	print(m)
x ,  y ,  z  =  f1()
print(x)
print(y)
print(z)

'''
Output:
One
1
Two
2
Three
3
End
One
Two
Three
End
1
2
3
'''


Program-9
# Identify  error
def  f1():
        yield  10
        yield  20
        yield  30
        yield  40
#a , b , c = f1()   # value error too many values to unpack 
p , q , r , s , m = f1()


Program-10
# Find  outputs
def   f1():
	yield    1
	yield    2
	yield    3
# End  of  generator
g =  f1()
#print(len(g))
#print(g * 3)           # cant multiply between generator and int
#print(g[0])            # no index
#print(g[1 : 3])        # no slicing
print(*g) #1 2 3
