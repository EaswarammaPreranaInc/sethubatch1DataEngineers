# program 1
# return  statement  demo  program

def  f1():
	print('f1  function')
	return  25  
	print('Hello')
# End  of  the  function
print('Begin') # Begin
x =  f1()
print(x) # f1 <next line> function  <next line> 25   
print('End') # end 
'''
# if this was not there function would have returned none and next statement would also be executed'''

#output:-
Begin
f1  function
25
End

# program 2 
#Find outputs  
def   f1():
	print('Hyd')
	print('Sec')
	print('Cyb')
# End  of  the  function
print('Begin') # Begin
x = f1()
print(x) # Hyd<next line> Sec <next line>Cyb <next line>None 
print(type(x)) # <class 'Nonetype'>
print('End') # End 

#output:-
Begin
Hyd
Sec
Cyb
None
<class 'NoneType'>
End

# program 3 
# Find  outputs  

def  f1():
	return  10 , 20 , 30
# End  of  the  function
x = f1() 
print(x) # (10,20 ,30) 
print(type(x)) # class tuple
a , b , c =  f1()
print(a) #10
print(b) #20
print(c) #30
print('for  loop') # for loop
for  k   in   f1():
	print(k) #10 
	         #20
			     #30 

#output:-
(10, 20, 30)
<class 'tuple'>
10
20
30
for  loop
10
20
30

#program  4 
#Find  outputs

def    f1():
        return  10
        return  20
        return  30
# End  of  the  function
print('Begin') #begin 
x = f1()
print(x) # 10
print('End') # End 
#return   100 #error 'return' outside function

#output:-
Begin
10
End

# program 5 
#Find  outputs

#f1() # error cant call before defining   name 'f1' is not defined
def f1():
      print('Hello')
print(f1()) # Hello next line none 
print(f1) # type of function and address

#program 6 
#Find  outputs 

print('Hello') # Hello
def  f1():
        print('f1  function')
#End  of   function
print('Hi') # Hi
print(f1()) # f1 function <next line> None
print(f1) # type and address
print('Bye') # bye 

#output:-
Hello
Hi
f1  function
None
<function f1 at 0x000001C5A4DE1440>
Bye

# program 7
#Find  outputs

def    f1():
        print('Hyd')
        print('Sec')
        print('Cyb')
#End  of  the  function
print('Begin') # Begin 
print(type(f1)) # function f1 
print(id(f1)) # address in decimal number i.e 2236820034624
print('End') # end 

#output:-
Begin
<class 'function'>
2236820034624
End

#program 8
#Find  outputs

def  f1():
	print('No-argument  function')
def  f1(x):
	print('Single  argument  function  : ' , x)
def  f1(x , y):
	print('Two  argument  function : ' , x , y)
def  f1(x , y , z):
	print('Three  argument  function : ' , x , y , z)
f1(10 , 20 , 30) # 'Three  argument  function : ' , 10 , 20 , 30 
#f1(40 , 50) #error f1() missing 1 required positional argument: 'z'
#f1(60) # error f1() missing 2 required positional arguments: 'y' and 'z'
#f1() # error  becoz arguments are not passed : 'x', 'y', and 'z'

#output:-
Three  argument  function :  10 20 30


# program 9 
#Modify  following  program  such  that  every  function  should  be  executed

def  f1():
	print('No-argument  function')
f1()  # No-argument  function
def  f1(x):
	print('Single  argument  function  : ' , x)
f1(25)  #  Single  argument  function  :  <space>  25
def  f1(x , y):
	print('Two  argument  function : ' , x , y)
f1(10 , 20)  #  Two  argument  function :  <space>  10   <space>  20
def  f1(x , y , z):
	print('Three  argument  function : ' , x , y , z)
f1(25 , 10.8 , 'Hyd')  #  Three  argument  function :  <space> 25   <space>  10.8  <space>  Hyd

# program 10

#Write   a  function  to  test  a  number  is  prime  (or)  not.

1) What  is  a  prime  number ?  --->  A  number  without  divisors  except  1  and  itself

2) Let  input  be  25
    What  is  the  range  of  divisors ? --->  i =   2 , 3 , 4 , 5 , 6 , ..... 12

3) Let  input   be  11
    What  is   the  range  of  divisors ? --->  i =  2 , 3 , 4 , 5

4) What  action  to  be  made  if  'i'  is  not  a  divisor  of  input  number ?  ---> Move  to  the  next  element  of  range  object

5) What  action  to  be  made  if  'i'  is  a  divisor  of  input  number ?  ---> return   False

6) What  action  to  be  made  if  there  are  no  divisiors  to  input  number  ? ---> return  True  outside  the  loop


n = int(input('Enter  any  number  :  '))  #  How  to  read  a  number
if  n < 2:   #   input  is  invalid:
	print('Invalid  input')
elif  prime(n):  #   input  is  prime  number:
	print('Prime  number')
else:
	print('Composite  number')

#output:-
Enter  any  number  :25
prime number

#program 11
# Find  outputs  

def   disp(empno , ename , sal):
        print(F'Emp  Number  :  {empno} \t  Emp Name  :  {ename} \t  Salary  :  {sal}')
# End  of  the  function
disp(25 , 'Rama  Rao' , 10000.0)
disp('Sita' , 20000.0 , 35)
output:-
Emp  Number  :  25        Emp Name  :  Rama  Rao          Salary  :  10000.0
Emp  Number  :  Sita      Emp Name  :  20000.0    Salary  :  3


#program 12
# Find  outputs 

def    f1(a , b , c):
          print(F'a  :  {a}    \t  b  :  {b}  \t  c :  {c}')
# End  of  the  function
f1(a = 10 , b = 20 , c = 30)  #  a : 10  <tab>  b : 20 <tab>  c : 30
f1(25 , 10.8 , 'Hyd')   #  a :  25   <tab>  b :  10.8  <tab>  c :  Hyd
f1(b = 40.7 , a = 50.2 , c = 60.5)   #  a :  50.2   <tab>  b :  40.7  <tab>  c :  60.5
f1(c = 'Hyd' , b = 'Sec' , a = 'Cyb')#
f1(c = 3 + 4j , a = True , b = None)
f1(25 , c = 10.8 , b = 'Hyd')
#f1(a = 100 , 200 , 300)  #  Error  becoz  pa's  are  after  ka
#f1(True , None , b = 'Hyd')  #  Error  becoz arg  is  passed  for  'b'  twice
#f1(10 , 20 , x = 30)  #  Error  becoz  arg  'x'  does  not  exist  for  f1()  function
#f1(10 , 20)  #  Error :  Arg  is  not  passed  for  'c
output:-
a  :  10          b  :  20        c :  30
a  :  25          b  :  10.8      c :  Hyd
a  :  50.2        b  :  40.7      c :  60.5
a  :  Cyb         b  :  Sec       c :  Hyd
a  :  True        b  :  None      c :  (3+4j)
a  :  25          b  :  Hyd       c :  10.8

# program 13
# Find  outputs 

def disp(empno , ename , sal):
      print(F'Emp  Number : {empno:4}  \t  Emp  Name : {ename:15}  \t  Salary : {sal}')
# End  of  the  function
disp(25 , 'Rama Rao' , 10000.0)
disp(ename = 'Sita' , sal = 20000.0 , empno = 35)
x = 'Rama  Rao'
y = 30000.0
z = 20
disp(x , y , z)

#output:-
Emp  Number :   25        Emp  Name : Rama Rao            Salary : 10000.0
Emp  Number :   35        Emp  Name : Sita                Salary : 20000.0
Emp  Number : Rama  Rao           Emp  Name :         30000.0     Salary : 20

#program  14 
# Find  outputs 

def f1(a , b , c):
	return  a + b * c
#end  of  the  function
print(f1(3 , 4 , 5))
print(f1(*[6 , 7 , 8]))
#print(f1([6 , 7 , 8]))
print(f1(*{1 : 2 , 3 : 4 , 5 : 6}))
print(f1(**{'c' : 2 , 'b' :  4 , 'a' : 6}))
#print(f1({'c' : 2 , 'b' :  4 , 'a' : 6}))
print({**{'c' : 2 , 'b' :  4 , 'a' : 6}})
#print(f1(**{'c' : 2 , 'a' : 4 , 'x' : 6}))

#output:-
23
62
16
14
{'c': 2, 'b': 4, 'a': 6}

#program 15
# Identify  Error 

a = [10 , 20 , 15 , 5 , 12]
print(sorted(reverse = True , a)) # a should be given firt not last
print(sorted(a , rev = True)) # we have to give reverse not rev
print(25 , 10.8 , 'Hyd' , separator = '\t') # Error because we have to sep not separator 
print(25 , 10.8 , 'Hyd' , endofline = '\t') # Error beacause we have to give end not endofline
print(25 ,  sep = '\t' , 10.8 , end = '\t' , 'Hyd') # Error because positional arguments followed by key word
