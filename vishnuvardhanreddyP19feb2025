# Find  outputs  (Home  work)
a = {10 : 'Ramesh' , 20 : 'Kiran' , 15 : 'Amar' , 18 : 'Sita'}
print(a) # entire dictionary will be printed ({10 : 'Ramesh' , 20 : 'Kiran' , 15 : 'Amar' , 18 : 'Sita'})
print(type(a)) # it shows the class type of object (<class 'dict'>)
print(a[10]) # prints key '10' value 'Ramesh'
print(a[20])# prints key '20' value 'Kiran'
print(a[15])# prints key '15' value 'Amar'
print(a[18])# prints key '18' value 'Sita'
print(a[19])# error, because 19 is not a valid key
print(a[0])# error, because 0 is not a valid key
print(a['Amar'])# error, because 'Amar' is not a valid key
a[15] = 'Krishna' #key 15 value replaced with 'Krishna'
del a[20]#deletes the key and its value from dictionary
a[25] = 'Vamsi'# appends the new key 25 with value vamsi
print(a)# modified dictionary will be printed {10 : 'Ramesh'  , 15 : 'Krishna' , 18 : 'Sita', 25: 'Vamsi'}
print(len(a))#prints the length of the dicationary 'a',4
print(a * 2)#error, dictionary dont allow the duplicate keys

# Find  outputs  (Home  work)
a = {10 : 'Hyd' , 10 : 'Sec'}
print(a) #{10:'sec}, dictionary dont allow the duplicate keys
print(len(a))# length is 1
b = {'R' : 'Red' , 'G' : 'Green' , 'B' : 'Blue' , 'Y' : 'Yellow' , 'G' : 'Gray' , 'B' : 'Black'}
print(b) #{'R' : 'Red' ,  'Y' : 'Yellow' , 'G' : 'Gray' , 'B' : 'Black'} dictionary dont allow the duplicate keys
print(len(b)) #lenth is 4

#  Gift 
# Find output  (Home  work)
a = {True : 'Yes' , 1 : 'No' , 1.0 : 'May  be'}
print(a) # {True : 'maybe'} because, True,1,1.0 all are same.
print(len(a)) # length 1

# Find  outputs
a = { [ ] : 25} # error because keys must be immutable and here list is mutable.
b = { ( ) : 25} 
print(b) #{ ( ) : 25} 
c = { { } : 25} # error because keys must be immutable and here dictionary is mutable.
d = {'Ramesh' : [9948250500, 9848565090, 9440250404]}
print(d) #{'Ramesh' : [9948250500, 9848565090, 9440250404]}
print(len(d))length is 1
e = {set() : 10.8}#error because keys must be immutable and here set is mutable.

# Find  outputs
a = {}
print(type(a))#class dict
print(len(a))#zero , it is empty dictionary
print(a) #{}
b = dict()
print(type(b))class dict
print(len(b))#zero , it is empty dictionary
print(b)#{}
