#program 1
#  Repeat  previous  program  such  that  OTP  can  be  between  000000  and   999999  (may  be   000156)
import random
for x in range(10):
	print(random.randint(000000 , 999999))

output
99903
284191
994623
723214
759656
399886
749687
506181
507365
166096

#program 2
# Save  in  any  file  of  cwd
from  p1   import  mod1    #   Executes  __init__  module  of  package  p1
print(mod1.x) # How  to  print  variable  'x'  of  mod1  in  package  p1
mod1.f1() # How  to  call  function  f1()  of  mod1  in  package  p1
a = mod1.c1()
a.m1() # How  to  call  method  m1()  of  class  c1  in  mod1  of  package  p1
#print(p1 . x) # error as  package  p1  is not imported
#print(p1 . __init__ . x) #  Error  becoz   package  p1   is  not  imported
#print(__init__ . x) #  Error  becoz  there  is  no   __init__  module  in  cwd

output
__init__   module  of  package  p1  is  executed
20
p1  --->  mod1   --->  f1  function
p1  ---> mod1  ---> c1  ---> m1 method


#program 3
# Save  in  any  file  of  cwd
import   p1  #  Executes  __init__  module  of  package  p1  automatically
print(p1 .x)  #  How  to  print  variable  'x'  of  __init__  module  in  package  p1
p1 . f1()  #  How  to  call  function  f1()  of  __init__  module  in  package  p1
a = p1 . c1()
a . m1() # How  to  call  method  m1()  of  class  c1  in   __init__  module  of  package  p1
#print(p1 . __init__ . x)  #  Error :  __init__   module  is  not  imported  from package  1p
#print(__init__ . x)  #  Error :  __init__   module  is  not  imported  from  cwd
#print(x)  #  Error :  No  'x'  in  current  module
#print(p1 . mod1 . x)  #  Error :  mod1  is  not  imported  from package  1p


#program 4
# Save  in  any  file  of  cwd
import  p1 . mod1   #   Automatically  executed  p1 . __int__  module
print(p1 . mod1 . x)  # How  to  print  variable  'x'  of  mod1  in  package  p1
p1 . mod1 . f1()  # How  to  call  function  f1()  of  mod1  in  package  p1
a = p1 . mod1 . c1()
a . m1()  #  How  to  call  method  m1()  of  class  c1  in  mod1  of  package  p1
print()
print()
print(p1 . x)  #  How  to  print  variable  'x'  of  __init__  module  in  package  p1
p1 . f1()  #  How  to  call  function  f1()  of  __init__  module  in  package  p1
a = p1 . c1()
a . m1()  #  How  to  call  method  m1()  of  class  c1  in   _init_  module  of  package  p1


#program 5
# Save  in  any  file  of  cwd
import p1 . __init__  # How  to  import  __init__  module  of  package  p1  with  import  statement
print(p1.x) # How  to  print  variable  'x'  of   __init__  module   in   package  p1
p1.f1() # How  to  call  function  f1()  of   init  module  in  package  p1
a = p1.c1()
a . m1()  # How  to  call method  m1()  of  class  c1  in   init  module  of  package  p1
print(p1.__init__.x) # How  to  print  variable  'x'  of   __init__  module   in   package  p1  in  another  way
p1.__init__.f1() # How  to  call  function  f1()  of   __init__  module  in  package  p1  in  another  way
a = p1.__init__.c1()
a . m1()  #How  to  call  method  m1()  of  class  c1  in   __init__  module  of  package  p1  in  another  way
#print(p1 . mod1 . x) # error as mod1 is not imported

output

__init__   module  of  package  p1  is  executed
__init__   module  of  package  p1.__init__  is  executed
10
package  p1 ---> __init__  module ---> f1  function
package  p1 ---> __init__  module ---> class  c1  ---> m1  method
10
package  p1 ---> __init__  module ---> f1  function
package  p1 ---> __init__  module ---> class  c1  ---> m1  method
