Program-1
# difference()   method  demo  program
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . difference(b)
print(c)  # {10, 20}
print(type(c))  # <class 'set'>
d = a - b
print(d)  # {10, 20}
print(type(d))  # <class 'set'>
print(c  is  d)  # False
print(c  ==  d)  # True


Program-2
# symmetric_difference()   method  demo  program
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . symmetric_difference(b)
print(c)  # {10, 50, 20, 60}
print(type(c))  # <class 'set'>
d = a ^ b
print(d)  # {10, 50, 20, 60}
print(type(d))  # <class 'set'>
print(c   is   d)  # False
print(c  ==   d)  # True


Program-3
# Find  outputs
a = {x * x  for   x   in   range(10)}
print(a)  # {0, 1, 64, 4, 36, 9, 16, 49, 81, 25} in any order
print(type(a))  # <class 'set'>


Program-4
# Write  a  program  to  remove  duplicate  characters  of  the  string  using  set
a = input('Enter a string:')  # Enter a string:RamA  Rao
b = (set(a))
c = '' . join(b)
print('Result:' , c)  # Result: Ram o


Program-5
# Write  a  program  to  print  distinct  vowels  of  the  string  by  using  set
a = input('Enter a string:')  # Enter a string:RamA  Rao
vowels = {'a' , 'e' , 'i' , 'o' , 'u'}
b = set()
for char in a:
	if char in vowels:
		b.add(char)
c = '' . join(b).upper()                   
print('Result:' , c)  # Result: AO


Program-6
# Write  a  program  to  remove  duplicate  elements  of   list  using  set
a = eval(input('Enter any inputs:'))  # Enter any inputs:[False , 25 , 10.8 , 1  , 25 , 0 , 'Hyd' ,  10.8 , 1.0 , None , 'Sec' , 'Hyd' , True  ]
b = list(set(a))
print('Result:' , b)  # Result: [False, 1, None, 10.8, 'Hyd', 25, 'Sec']


Program-7
# Write  a  program  to   obtain  common  elements  between  two  lists  using  sets
list1 = eval(input('Enter 1st list:'))  # Enter 1st list:[10 , 20 , 30 , 40 , 50 , 60]
list2 = eval(input('Enter 2nd list:'))  # Enter 2nd list:[30 , 40 , 70 , 80 , 20]
list3 = list(set(list1) & set(list2))
print('Common Elements from two lists:' , list3)  # Common Elements from two lists: [40, 20, 30]


------------------------- Dictionary Functions, Methods, Programs ------------------------
Program-8
#  How  to  access  values  of  dictionary
a  =  {'Empno'  :  25 ,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a['Empno'])  # How  to  print  value  25  in  dict  'a'        i.e.  25  
print(a['Ename'])  # How  to  print  'Rama Rao'  in  dict  'a'       i.e.  Rama rao  
print(a['Sal'])    # How  to  print  value  1000.65   in  dict  'a'  i.e.  1000.65  


Program-9
# How  to  modify  values  of  dictionary
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a)             # {'Empno': 25, 'Ename': 'Rama  Rao', 'Sal': 1000.65}
print(id(a))         # Address of object 'a' i.e. 2064400196800
a['Sal'] = 2000      # How  to  modify  1000.65  to  2000
a['Ename'] = 'Sita'  # How  to  modify  'Rama  Rao'  to  'Sita'
a['Empno'] = 35      # How  to  modify  25   to  35
print(a)             # {'Empno': 35, 'Ename': 'Sita', 'Sal': 2000}
print(id(a))         # 2064400196800


Program-10
#  How  to  append  key : value  pairs  to dictionary
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a)              # {'Empno': 25, 'Ename': 'Rama  Rao', 'Sal': 1000.65}
a['Gender'] = 'M'     # How  to  append  'Gender' : 'M'  to  dictionary  'a'
a['Married'] = True   # How  to  append  'Married' :  True  to  dictionary  'a'
print(a)              # {'Empno': 25, 'Ename': 'Rama  Rao', 'Sal': 1000.65, 'Gender': 'M', 'Married': True}


Program-11
# Find  outputs
a = { }
a[10] = 'Rama'     # How  to  append  10 : 'Rama'  to  dictionary  'a'
a[20] = 'Sita'     # How  to  append  20 : 'Sita'  to  dictionary  'a'
a[15] = 'Rajesh'   # How  to  append  15 : 'Rajesh'  to  dictionary  'a'
a[18] = 'Kiran'    # How  to  append  18 : 'Kiran'  to  dictionary  'a'
print(a)           # {10: 'Rama', 20: 'Sita', 15: 'Rajesh', 18: 'Kiran'}


Program-12
#  How  to  remove  key : value  pairs  of  dictionary
a =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a)      # {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
del a['Sal']  # How  to  remove  'Sal' : 1000.65  from  dictionary  'a'
print(a)      # {'Empno': 25, 'Ename': 'Rama  Rao'}


Program-13
#  What  are  the  outputs  if  input  is  {10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
a = input('Enter  dictionary  :  ')  # Enter  dictionary  :  {10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
print(a)                             # {10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
print(type(a))                       # <class 'str'>
b = eval(a)                          # converts string object to dictionary
print(b)                             # {10: 'A', 20: 'D', 15: 'C'}
print(type(b))                       # <class 'dict'>


Program-14
#  Find  outputs
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh' , 18 : 'Kiran'}
b = {**a}          # unpacks dictionary to form a new dictionary with same key:value pairs
print(b)           # {10: 'Rama', 20: 'Sita', 15: 'Rajesh', 18: 'Kiran'}
print(a  is  b)    # False
print(a  ==  b)    # True
c = a
print(a  is   c)   # True
print(a  ==  c)    # True


Program-15
#Find  outputs
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh'}
b = {18 : 'Kiran' , 14 : 'Amar' , 20  : 'Manohar'}
c = {25 : 'Ramesh' , 19 : 'Krishna' , 15 : 'Radha' , 14 : 'Srinivas'}
d = {*a , *b , *c}       # unpacks dictionary to form a set of keys due to {}
print(d)                 # {10, 14, 15, 18, 19, 20, 25}
print(type(d))           # <class 'set'>
e = {**a , **b , **c}    # unpacks dictionary to form a new dictionary with same key:value pairs
print(e)                 # {10: 'Rama', 20: 'Manohar', 15: 'Radha', 18: 'Kiran', 14: 'Srinivas', 25: 'Ramesh', 19: 'Krishna'}
print(type(e))           # <class 'dict'>


Program-16
#  Find  outputs
a = {10 : 20 , 30 : 40}
b = {30 : 50 , 10 : 60}
#print(a + b)    # Error due to +
c = {**a , **b}
print(c)         # {10: 60, 30: 50}
d = a | b
print(d)         # {10: 60, 30: 50}


Program-17
# Write  a  program  to  create  a  dictionary  with  emp  names  and  salaries
# Hint:  Append  each  emp  name  and  salary  to  dictionary  'a'
a = {}
num = int(input("How many Employees? : "))
for i in range(num):
    ename = input("Enter Emp Name : ")
    salary = float(input("Enter Salary : "))
    a[ename] = salary
print('Result:' , a)

'''
Output:
How many Employees? : 4
Enter Emp Name : Ravi
Enter Salary : 20000
Enter Emp Name : Krishna
Enter Salary : 10000
Enter Emp Name : Kishore
Enter Salary : 18000
Enter Emp Name : Nandini
Enter Salary : 12000
Result: {'Ravi': 20000.0, 'Krishna': 10000.0, 'Kishore': 18000.0, 'Nandini': 12000.0}
'''


Program-18
# Write  a  program  to  convert  a  string  to  dictionary
# Hint :  Use  split()  method  twice
a = input('Enter string with arg1 = value1 , arg2 = value2, .......:')  # Enter string with arg1 = value1 , arg2 = value2, .......:Emp no = 25 , Emp name = Rama Rao , sal = 10000.0 , gender = m
b = a.split(',')
c = {}
for x in b:
	y = x.split(' = ')
	c[y[0]] = y[1]
print('Result:' , c)  # {'Emp no': '25', 'Emp name': 'Rama Rao', 'sal': '10000.0', 'gender': 'm'}

------- Dictionary Functions ---------
Program-19
# len()  function  demo  program
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(len(a))  # 3
b = {}
print(len(b))  # 0


Program-20
#  sum()  function demo  program
a = {10 : 20 , 30 : 40 , 50 : 60}
print(sum(a . keys()))  # 90
print(sum(a . values()))  # 120
print(sum(a))  # 90
print(sum(a . items()))  # Error because keys and values cannot be sumed 


Program-21
# max()  and  min()   functions  demo  program
a = {10 : 20 , 30 : 25 , 40 : 5 , 7 : 28 , 9 : 50}
print(max(a . keys()))  # 40
print(min(a . keys()))  # 7
print(max(a . values()))  # 50
print(min(a . values()))  # 5
print(max(a . items()))  # (40 , 5)
print(min(a . items()))  # (7 , 28)
print(max(a))  # 40
print(min(a))  # 7


Program-22
#  dict()  function  demo program
a = [ (10 , 'Hyd') , (20 , 'Sec') , (15 , 'Cyb') , (20 , 'Pune')]  #  List of  tuples
b = dict(a) #  Converts  list  of  tuples  to  dict
print(b)  #  {10 : 'Hyd', 20 : 'Pune' , 15 : 'Cyb'}
c = ( ['R' , 'Red'] , ['G' , 'Green'] , ['B' , 'Blue'] , ['G' , 'Gray'])
d = dict(c)  # Converts  tuple  of  lists  to  dict
print(d)  # {'R': 'Red', 'G': 'Gray', 'B': 'Blue'}
e = [[10 , 20 , 30] , [40 , 50 , 60] , [70 , 80 , 90]]
#print(dict(e))  # Error due to excess arguments to covert to dictionary
f = [[10] , [20] , [30]]
#print(dict(f))  # Error due to 0 values
#print(dict([10 , 20]))
g = [[10 , [20 , 30]] , [40 , [50 , 60]] , [70 , [80 , 90]]]
print(dict(g))  # {10: [20, 30], 40: [50, 60], 70: [80, 90]}
h = [[[10 , 20] , 30] , [[40 , 50] , 60] , [[70 , 80] , 90]]
#print(dict(h))  # Error 
i = [[(10 , 20) , 30] , [(40 , 50) , 60] , [(70 , 80) , 90]]
print(dict(i))  # {(10, 20): 30, (40, 50): 60, (70, 80): 90}


Program-23
# sorted()  function
a = {10 : 'Red' , 20 : 'Green' , 15 : 'Blue' , 18 : 'Yellow' , 5 : 'White'}
b = sorted(a . keys())
print(b)  # [5, 10, 15, 18, 20]
c = sorted(a . values())
print(c)  #['Blue', 'Green', 'Red', 'White', 'Yellow']
d = sorted(a . items())
print(d)  # [(5, 'White'), (10, 'Red'), (15, 'Blue'), (18, 'Yellow'), (20, 'Green')]
f  = sorted(a  , reverse = True)
print(f)  # [20, 18, 15, 10, 5]
print(a)  # {10: 'Red', 20: 'Green', 15: 'Blue', 18: 'Yellow', 5: 'White'}


Program-24
# Write  a  program  to  sort  dictionary  wrt  keys
# Hint:  Use  sorted()  function
a = {10 : 'A' , 20 : 'B' , 15 : 'C' , 5 : 'D' , 12 : 'E'}
b = sorted(a.items())
print(dict(b))  # {5: 'D', 10: 'A', 12: 'E', 15: 'C', 20: 'B'}

-------- Dictionary Methods ---------
Program-25
# clear()  method  demo  program
a = {10 : 20 , 30 : 40 , 50 : 60}
print(a)  # {10: 20, 30: 40, 50: 60}
a . clear()
print(a)  # {}
del  a
print(a)  # Error due to there is no object 'a'


Program-26
# copy()  method demo  program
a = {'R' : 'Red' , 'G' : 'Green' , 'B' : 'Blue'}
b = a . copy()
print(b)  # {'R': 'Red', 'G': 'Green', 'B': 'Blue'}
print(a  is  b)  # False
print(a  ==  b)  # True


Program-27
#  Find  outputs
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh'}
x , y , z = a . keys()
print(x)  # 10
print(y)  # 20
print(z)  # 15
print()
x , y , z = a . values()
print(x)  # Rama
print(y)  # Sita
print(z)  # Rajesh
print()
x , y ,  z = a . items()
print(x)  # (10, 'Rama')
print(y)  # (20, 'Sita')
print(z)  # (15, 'Rajesh')
print()
(rno1 , sname1) , (rno2 , sname2) , (rno3 , sname3) = a . items()
print(rno1 , sname1)  # 10 Rama
print(rno2 , sname2)  # 20 Sita
print(rno3 , sname3)  # 15 Rajesh


Program-28
#  keys()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . keys()
print(b)  # dict_keys([10, 20, 15, 18])
print(type(b))  # <class 'dict_keys'>
for  x  in   b:
        print(x)  # 10
		              # 20
				          # 15
				          # 18


Program-29
# values()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . values()
print(b)  # dict_values(['Hyd', 'Sec', 'Cyb', 'Pune'])
print(type(b))  # <class 'dict_values'>
for  x   in   b:
	print(x)  # Hyd
              # Sec
              # Cyb
              # Pune


Program-30
#  items()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . items()
print(b)   # dict_items([(10, 'Hyd'), (20, 'Sec'), (15, 'Cyb'), (18, 'Pune')])
print(type(b))  # <class 'dict_items'>
for  x   in   b:
        print(x)  # (10, 'Hyd') <next line> (20, 'Sec') <next line> (15, 'Cyb') <next line> (18, 'Pune')
for  x , y   in  b:
        print(x , y , sep = ' ... ')  # 10 ... Hyd <next line> 20 ... Sec <next line> 15 ... Cyb <next line> 18 ... Pune


Program-31
# Find  outputs (Home  work)
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
for  x , y   in  a . items():
       print(x , y , sep = ' ... ')  # 10 ... Hyd <next line> 20 ... Sec <next line> 15 ... Cyb <next line> 18 ... Pune <next line>
for  x , y   in  a . keys():
       print(x , y , sep = ' ... ')  # Error due to 2 variables x, y
for  x , y   in  a . values():
       print(x , y , sep = ' ... ')  # Error due to 2 variables x, y
for  x , y   in  a:
       print(x , y , sep = ' ... ')  # Error due to 2 variables x, y


Program-32
# Write  a program  to  determine  frequency  of  each  alphabet  in  the  string   in   alphabetical  order  (ignoring  the  case)
# Hint: Use  get()  method
a = input("Enter a string: ")  # Enter a string: RamA raO
b = {}
for char in a:
    if char.isalpha():
        char = char.upper()
        b[char] = b.get(char, 0) + 1
c = {key: b[key] for key in sorted(b.keys())}
print('Result:' , c)  # Result: {'A': 3, 'M': 1, 'O': 1, 'R': 2}


Program-33
# Find outputs
a = [ ('R' , 'Red') , ('G' , 'Green') , ('B' , 'Blue')]
b = {'Y' : 'Yellow', 'G' : 'Gray'}
b . update(a)
print(b)  # {'Y': 'Yellow', 'G': 'Green', 'R': 'Red', 'B': 'Blue'}
#a . update(b)  # Error


Program-34
#  Find  outputs 
a = [ (10 , 20 , 30) , (40 , 50 , 60) , (70 , 80 , 90)]
b = {}
#b.update(a)  # Error
print(b)  # {}
c = [(10,) , (20,) , (30,)]
#b . update(c)  # Error
print(b)  # {}


Program-35
#  Find  outputs
d = {x : x ** 3   for    x   in  range(5)}
print(d)  # {0: 0, 1: 1, 2: 8, 3: 27, 4: 64}
print(type(d))  # <class 'dict'>


Program-36
# Find outputs
d = { x :  2 * x    for    x   in   range(5) }
print(d)  # {0: 0, 1: 2, 2: 4, 3: 6, 4: 8}


Program-37
# Find outputs
a = {10 : 'Rama' , 15 : 'Sita' , 18 : 'Rajesh' , 17 : 'Kiran' , 12 : 'Rama Rao'}
b = { k :  v  for   k , v  in   a .items()   if    k % 2 != 0}
print(b)  # {15: 'Sita', 17: 'Kiran'}
c = {k : a[k]   for   k   in    a    if   a[k] . startswith('R')}
print(c)  # {10: 'Rama', 18: 'Rajesh', 12: 'Rama Rao'}
