#program 1
# a  program  to  remove  all  15's  from  the  list
a = [10 , 20 , 15 , 18 , 12 , 15 , 19 , 25 , 15 , 14 , 12]

while (15 in a):
  a.remove(15)    #removes where 15 is found in list
print(a)          #[10, 20, 18, 12, 19, 25, 14, 12]


#program 2
#  Find  outputs 
a = (25 , 10.8 , 'Hyd' , True , 3+4j , None , 'Hyd' , 25)
print(a)            # prints the whole tuple i.e (25, 10.8, 'Hyd', True, (3+4j), None, 'Hyd', 25)
print(*a)           #unpacks elements of tuple i.e 25 10.8 Hyd True (3+4j) None Hyd 25
print(type(a))      #<class 'tuple'>
print(len(a))       #8
print(a[2 : 5])     #  ('Hyd', True, (3+4j))
print(*a[2 : 5])    #   Hyd True (3+4j)
a[2] = 'Sec'        #error tuple is immutable
a . append('Sec')   #error
a . remove('Hyd')   #error
b =  10 , 20 , 30
print(b)            #(10, 20, 30)
print(b * 2)        #(10, 20, 30, 10, 20, 30)
c = 40 , 50 , 60,
print(c)            #(40, 50, 60)
print(type(c))      #<class 'tuple'>

#program 3
# Find  outputs  (Home  work)
a = (25)            
b = 25,
c = 25
d = (25,)
print(type(a))    #<class 'int'>
print(type(b))    #<class 'tuple'>
print(type(c))    #<class 'int'>
print(type(d))    #<class 'tuple'>
print(a * 4)      #100
print(b * 4)      #(25, 25, 25, 25)
print(c * 4)      #100
print(d * 4)      #(25, 25, 25, 25)                                       

#program 4
a = tuple('Hyd')
print(a)                 #('H', 'y', 'd')
print(type(a ))          #<class 'tuple'>
print(len(a))            #3
b = [10 , 20 , 15 , 18]  
print(tuple(b))          #(10, 20, 15, 18)
print(tuple(range(5)))   #(0, 1, 2, 3, 4)
print(tuple(25))         # error tuple(non sequence)

#program 5
a = ()
print(type(a))   #<class 'tuple'>
print(a)         #()
print(len(a))    #0
b = tuple()      
print(b)         #()
print(len(b))    #0

#program 6   
a = (10 , 20 , 30)
print(a)      #(10, 20, 30)
print(id(a))  #some address of id (a)
a = a * 2
print(a)      #(10,20, 30, 10, 20, 30)
print(id(a))  #different address of id (a)

#program 7
#set
a = {25 , 10.8 , 'Hyd' , True , 3+4j , None , 25 , 'Hyd'}
print(a)         #remove duplicates and print elements of set in unorderd way i.e {None, True, 25, 10.8, 'Hyd', (3+4j)}
print(type(a))   #<class 'set'>
print(len(a))    #6
print(a[2])      #error 
print(a[1 : 4])  #error
a[2] = 'Sec' 
print(a * 2)     #error
print(a * a)     #error repetition is not allowed

#program 8
# Find  outputs
a = {1 , 'Hyd' , False , True , 0.0 , '' , 1.0 ,  0}
print(a)        #{False, 1, 'Hyd', ''}
print(len(a))   #4
print(type(a))  #<class 'set'>

#program 9
a = set('Rama rAo')
print(a)               #{'A', ' ', 'r', 'o', 'R', 'a', 'm'}
print(len(a))           #7
print(set([10 , 20 , 15 , 20]))    #{10, 20, 15}
print(set((25 , 10.8 , 'Hyd' , 10.8)))  #{25, 10.8, 'Hyd'}
print(set(range(10 , 20 , 3)))          #{16, 10, 19, 13}
print(set(25))                          #error set(non sequence )

#program 10
# Find  outputs  (Home  work)
a =   [ ]
b =   ( )
c =   { }
d =   set()
print(type(a))   #<class 'list'>
print(type(b))   #<class 'tuple'>
print(type(c))   #<class 'dict'>
print(type(d))   #<class 'set'>
print(a)         #[]
print(b)         #()
print(c)         #{}
print(d)         #set()

#program 11
# add()  and  remove()  methods  (Home  work)
a = set()
a . add(25)
a . add(10.8)
a . add('Hyd')
a . add(True)
a . add(None)
a . add('Hyd')
a . add(1)
print(a)   #{None, True, 'Hyd', 10.8, 25}
a . remove(25)
print(a) #{None, True, 'Hyd', 10.8}
a . append(100)
a . add(set())
#append method is not there in set insted use (a.add)

#program 12
a = {25 , True , 'Hyd' , 10.8}
print(a)
print('iterate elements')
for x in a:
  print(x)

Output:
{25, 10.8, True, 'Hyd'}
iterate elements
25
10.8
True
Hyd

