#17/4/2025 
#1. Find  outputs
'''
import  time
class   c3:
	def  __iter__(self):
		print('__iter__ method ')
		return  reversed([10 , 20 , 15 , 18])
		
# End  of  the  class
itr = c3()
for  x  in   itr: #__iter__ method 
	print(x) # 18 15 20 10 
	time . sleep(1)
#print(next(itr)) #Error 

'''

#2.Identify  Error  (Home  work)
'''
class   c4:
	def  __iter__(self):
		print('__iter__ method ')
		return   self #Error returning sequence object 
# End  of  the  class
itr = c4()
for  x  in   itr: #'__iter__ method 
	print(x) 
	
'''

#3.Identify  Error
'''
class   c5:
	def  __iter__(self):
		print('__iter__  method ')
		
		#Error returning None instead iterator 
		
# End  of  the  class
itr = c5()
for  x  in   itr: #__iter__  method 
	print(x)
	
'''


#4.Identify  Error

"""
class   c6:
        def   iter(self):
                return   reversed([10 , 20 , 15 , 18])
        def  next(self):
                print('next  method')
# End  of  the  class
a  =  c6()
print(dir(c6)) #['Environment variables' 'iter' 'next']
'''
for  x  in  a:
        print(x) #Error no __iter__() in c6


while  True:
	print(next(a)) #Error no __next__() in c6
'''

a . next() #next  method

"""


#5. Find  outputs(Home  work)

'''
class   c1:
	def  __init__(self):
		self . x =  1
	def   __iter__(self):
		print('__iter__    method')
		return  self
	def   __next__(self):
		value =  self . x
		self . x  +=  1
		return  value
# End  of  the  class
a = c1()
print('Elements  of  iterator  with  for  loop') # Elements  of  iterator  with  for  loop
for   element   in   a: # __iter__    method
	print(element) #1 2 3 4 5 
	if  element  ==  5:
               break
print('Elements  of  iterator  with  next()  function') #Elements  of  iterator  with  next()  function
while    True:
	element = next(a)
	print(element) #6 7 8 9 10
	if  element  ==  10:
		break
#end  of  while  loop
print('Elements  of  iterator  with  for  loop') #Elements  of  iterator  with  for  loop
for   element   in    a: #__iter__    method
	print(element)
	if  element  ==  15: #11 12 13 14 15
		break
'''

#6. Find  outputs (Home  work)

'''
import   time
class  Remote:
	def    __init__(self):
		self . list = ['Tv 9' , 'Espn' , 'Zee Tv' , 'ETV']
		self . index = -1
	def   __iter__(self):
		return  self
	def   __next__(self):
		self . index += 1
		if   self . index  ==  len(self . list):
			raise  StopIteration
		return    self . list[self . index]
# End  of  the  class
r = Remote()
for   x    in    r:
	print(x) #'Tv 9'   'Espn'   'Zee Tv'   'ETV'
	time . sleep(1)
	
'''


'''
#7. Write  an  iterator  which  yields  10 , 11 , 12 , 13 , ...... 20

Hint: Use  for  loop
'''

'''
from itertools import count
c=count(start=1)

for i in c:
    if(i>20):
        break 
    print(i)
    
'''


'''
#8. Design  an  iterator  which  yields  powers  of  two   i.e.  2 ^ 0 , 2 ^ 1 , 2 ^ 2 , ........ 2 ^ 7

Use  for  loop
'''

'''
from itertools import repeat
m=map(pow,repeat(2),range(8))

for i in m:
    print(i)
    
'''
