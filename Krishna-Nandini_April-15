Program-1
# Find  outputs
import  time
a = [25 , 10.8 , 3 + 4j , 'Hyd' , False]
f = filter(lambda   x :   True ,   a)  # creates an empty filter object
while  True:
	try:
		print(next(f))   # 25 <next line> 10.8 <next line> 3 + 4j <next line> 'Hyd' <next line> False
		time . sleep(1)
	except:
		break


Program-2
#  Find  outputs
import  time
a = [25 , 10.8 , 3 + 4j ,  'Hyd' , True]
f = filter(lambda  x  :  False ,  a)  # # creates an empty filter object
while  True:
	try:
		print(next(f))  # Nothing Throws stop iteration errorin 1st iteration itself
		time . sleep(1)
	except:
		break


Program-3
# Find  outputs
import  time
a = [25 , 10.8 , False ,  3 + 4j , 0 , 'Hyd' , '' , (25,)  ,  () ]
f = filter(lambda   x   :   x   ,   a)  # # creates an empty filter object
while  True:
	try:
		print(next(f))   # 25 <next line> 10.8 <next line> (3+4j) <next line> Hyd <next line> (25,)
		time . sleep(1)
	except:
		break


Program-4
# Find outputs
import  time
def  disp(f):
	while  True:
		try:
			print(next(f))
			time . sleep(1)
		except:
			break
list = [10 , 0 ,  -25 , () , (25,) , 'Hyd', '' , [] , 10.8 , 0.0 , [10 , 20] , True , False]
f1 = filter(lambda  x : None  , list)  # creates an empty filter object
print('Filter  f1')  # Filter  f1
disp(f1)
f2 = filter(None  , list)  # interpreted as f2 = filter(lambda x : x , list)
print('Filter  f2')  # Filter  f2
disp(f2)  # 25 <next line> 10.8 <next line> (3+4j) <next line> Hyd <next line> False


Program-5
# Find outputs
import  time
a = ['Rama Rao' , 'Sita' , 'Rajesh' , 'Kiran' , 'Amar' , 'Manohar' , 'Vamsi']
f = filter(lambda  x  :   len(x) >= 5  , a)  # creates an empty filter object
while   True:
	try:
		print(next(f))   # Rama Rao <next line> Rajesh <next line> Kiran <next line> Manohar <next line> Vamsi
		time . sleep(1)
	except:
		break


Program-6
# Find  outputs
import   time
list=[('A' , 10) , ('B' , 20) , ('C' , 15) , ('D' , 5) , ('E' , 18)]
f = filter(lambda   x  :   x[1]  >=  12 , list)  # creates an empty filter object
while   True:
	try:
		print(next(f))   # ('B' , 20) <next line> ('C' , 15) <next line> ('E' , 18)
		time . sleep(1)
	except:
		break


Program-7
# Find  outputs
import   time
list = [
             {
                'Roll Num' :  10 ,
                'Stud Name' : 'Rama Rao' ,
                'Marks' : 75
              } ,
              {
                'Roll Num' :  20 ,
                'Stud Name' : 'Sita' ,
                'Marks' : 52
              } ,
             {
               'Roll Num'  :  15 ,
               'Stud Name' : 'Kiran' ,
               'Marks' : 65
             } ,
             {
               'Roll Num'  :  18 ,
               'Stud Name' : 'Amar' ,
               'Marks' : 48
             } ,
             {
               'Roll Num' :  5 ,
               'Stud Name' : 'Rajesh' ,
               'Marks' : 82
             }
        ]  #  List  of  dictionaries
f = filter(lambda  x :  x['Marks'] >= 60 , list)  # creates an empty filter object
while   True:
	try:
		print(next(f))   # {'Roll Num' :  10 , 'Stud Name' : 'Rama Rao' , 'Marks' : 75} <next line> {'Roll Num' :  15 , 'Stud Name' : 'Kiran' , 'Marks' : 65} <next line> {'Roll Num' :  5 , 'Stud Name' : 'Rajesh' , 'Marks' : 82}  
		time . sleep(1)
	except:
		break


Program-8
# Find  outputs
import  time
def  disp(f):
	while  True:
		try:
			print(next(f))
			time . sleep(3)
		except:
			break
a = [   { 'country' : 'India' , 'sale' : 150.5} ,
        { 'country' : 'china' , 'sale' : 200.2} ,
        { 'country' : 'USA'   , 'sale' : 300.3} ,
        { 'country' : 'UK'    , 'sale' : 210.4} ]
f1 = filter (lambda  x  :   x['country'] . startswith('U') , a)  # creates an empty filter object
print('Filter  f1')  # Filter  f1 
disp(f1)  # { 'country' : 'USA'   , 'sale' : 300.3} <next line> { 'country' : 'UK'    , 'sale' : 210.4}
f2 = filter(lambda  x  :  x['sale']  >=  200  , a)  # creates another empty filter object
print('Filter  f2')  # Filter  f2
disp(f2)  # { 'country' : 'china' , 'sale' : 200.2} <next line> { 'country' : 'USA'   , 'sale' : 300.3} <next line> { 'country' : 'UK'    , 'sale' : 210.4}


Program-9
# How  to  print  fliter  object  in  different  ways ?
import   time
a = [10 , 15 , 20 , 17 , 18 , 19 , 26]
f = filter(lambda  x  :  x  %  2  ==  0 , a)
print('Iterate  filter  object  with   next   function')  # Iterate  filter  object  with   next   function
#How  to iterate  filter  object  with  next()  function
while True:
	try:
		print(next(f))  # 10 <next line>20 <next line> 18 <next line> 26
		time.sleep(1)
	except:
		break
print('Iterate  filter  object  with   for  loop')  # Iterate  filter  object  with   for  loop
#How  to iterate  filter  object  with  for  loop
for x in filter(lambda  x  :  x  %  2  ==  0 , a):
	print(x)   # 10 <next line> 20 <next line> 18 <next line> 26
	time.sleep(1)
print('Unpacking  filter  object :  ' , *filter(lambda  x  :  x  %  2  ==  0 , a) )  #   # Unpacking  filter  object :   10 20 18 26   # How  to  unpack  filter  object 
print()
print('filter  object  in  the  form  of  list  :  ' , list(filter(lambda  x  :  x  %  2  ==  0 , a)))  # filter  object  in  the  form  of  list  :   [10, 20, 18, 26]   # How  to  convert  filter  object  


Program-10
#  Write  a  program  to  print  odd  numbers  between  1  and  20  with  filter  iterator
import time
print('Odd  numbers  between  1  and  20')
f = filter(lambda x : x % 2 != 0 , range(1 , 21))
for y in f:
	print(y)
	time.sleep(1)

'''
Output:
Odd  numbers  between  1  and  20
1
3
5
7
9
11
13
15
17
19
'''


Program-11
# Write  a  program  to  print  distinct  vowels  of  the  string  using  filter.
# Input  is  string  and  output  is  set
import time
a = input('Enter  mixed  case   string  :  ')  # Enter  mixed  case   string  :  Rama Rao
s = a.upper()
f = filter(lambda ch : ch in 'AEIOU' , s)
print(set(f))  # {'O', 'A'}


Program-12
# Nested  filter  i.e.  filter  on  filter
import   time
list =  [ (10 , 'Rama' , 10000.0) ,
            (20, 'Sita' , 7000.0) ,
            (15 , 'Rajesh' , 15000.0) ,
            (5 , 'Amar' ,  12000.0) ,
            (18 , 'Ramesh' , 8000.0) ]
f = filter(lambda  x :  x[1] . startswith('R')  , filter(lambda  x :  x[2] >= 10000 , list))
while   True:
	try:
		print(next(f))   # (10 , 'Rama' , 10000.0) <next line> (15 , 'Rajesh' , 15000.0)
		time .  sleep(1)
	except:
		break


Program-13
#  Modify  following  program  with  regular  function  and  for  loop
import  time
a = [10 , 20 , 15 , 18 , 5]
m = map(lambda  x :  x  *  x ,  a)  # creates an empty map object
print(type(m))  # <class 'map'>
print(m)  # Type and address of 'm' i.e.  <map object at 0x0000023B6058AF50>
while   True:
	try:
		print(next(m))  # 100 <next line> 400 <next line> 225 <next line> 324 <next line> 25
		time . sleep(1)
	except:
		break


Program-14
# Find  outputs
import  time
a = [ ('A' , 10) , ('B' , 20) , ('C' , 15) , ('D' , 5) , ('E' , 18) ]
m = map(lambda   x  :  x[1]  ,  a)  # creates an empty map object
while   True:
	try:
		print(next(m))  # 10 <next line> 20 <next line> 15 <next line> 5 <next line> 18
		time . sleep(1)
	except  StopIteration:
		break


Program-15
# Find  outputs
import   time
def  disp(m):
	while   True:
		try:
			print(next(m))
			time . sleep(1)
		except:
			break
list = [    { 'country' : 'India' , 'sale' : 150.5} ,
              { 'country' : 'China' , 'sale' : 200.2} ,
              { 'country' : 'USA' , 'sale' : 300.3} ,
              { 'country' : 'UK' , 'sale' : 210.4} ]
m1 = map(lambda  x  :  x['country'] , list)  # creates an empty map object
print('Map   m1')  # Map   m1
disp(m1)  # India <next line> China <next line> USA <next line> UK
m2 = map(lambda  x  :  x['sale']  , list)  # creates another empty map object
print('Map   m2')  # Map   m2
disp(m2)  # 150.5 <next line> 200.2 <next line> 300.3 <next line> 210.4


# Program-16
'''
Write  a  program  to  convert  each  celsius  temperature  of  the  list  to  farenheit  temperature

1) What  is  the  formula  to  convert  celsius  temperature  to  farenheit ?  --->   1.8 * celsius  temp + 32

2) Let  input  be   list  of  celsius  temperatures  such  as  [30 , 40 , 50 , 25]
    What  is  the  output ?  --->   1.8 * 30 + 32
							                      1.8 * 40 +32
								                  1.8 * 50 + 32
								                  1.8 * 25 + 32
'''

import time
a = eval(input('Enter list of celsius temperatures: '))  # Enter list of celsius temperatures: [10, 20, 30, 40, 50]
m = map(lambda x : 18 * x + 32 , a)  # creates an empty map object
print('Farenheit Temperatures')  # Farenheit Temperatures
for y in m:
	print(y)  # 212 <next line> 392 <next line> 572 <next line> 752 <next line> 932
	time.sleep(1)


Program-17
# Write  a  program  to  print  2 ^ 0 , 2 ^ 1 , 2 ^ 2 , ....... 2 ^ 9  using  map   object (Home  work)
import time
m = map(lambda x : 2 ** x , range(10))  # creates an empty map object
print('Powers of 2')
for y in m:
	print(y)
	time.sleep(1)

'''
Output:
Powers of 2
1
2
4
8
16
32
64
128
256
512
'''


Program-18
'''
Write  a  program  to  determine  area  of  circle  for  each  radius  in  the  list

1) What  is  area  of  circle ?  --->  pi * r * r

2) Let  input  be  [3.5 , 2.8 , 4.2  , 1.9]
    What  are  the  outputs ?  --->  Area  of  radius  3.5
						                              Area  of  radius  2.8
						                              Area  of  radius  4.2
						                              Area  of  radius  1.9
'''

import time, math
a = eval(input('Enter list of radii: '))  # Enter list of radii: [3.5, 2.8, 4.2, 1.9]
m = map(lambda r : math . pi * r ** 2 , a)
print('Area  of  each  radius  in  the  list')  # Area  of  each  radius  in  the  list
for x in m:
	print(F'{x:.2f}')  # 38.48 <next line> 24.63 <next line> 55.42 <next line> 11.34
	time.sleep(1)


Program-19
'''
Write  a  program  to  add  two  tuples  of  difierent  sizes  and  store  the  results  in  3rd  tuple

Let  1st  tuple  be  (10 , 20 , 30 , 40)  and  2nd  tuple  be  (1 , 2 , 3 , 4 ,  5  ,  6)
What  is  the  3rd  tuple ?  --->  (10 + 1 , 20 + 2 , 30 + 3 , 40 + 4)   and  5  and 6  are  ignored
'''

a = eval(input('Enter first tuple: '))   # Enter first tuple: (10,20,15,18)
b = eval(input('Enter second tuple: '))  # Enter second tuple: (30,40,35,12,100,200)
m = map(lambda x , y : x + y , a , b) 
print('Addition  tuple :' , tuple(m))    # Addition  tuple : (40, 60, 50, 30)


Program-20
'''
Write  a  program  to  multiply  two  lists  and  store  results  in  3rd  list

Let  1st  list  be  [10 , 20 , 15 , 18 , 19 , 17]  and  2nd  list  be  [1 , 5 , 3 , 2]
What  is  the  3rd  list ?  ---> [10 * 1 , 20 * 5 , 15 * 3 , 18 * 2]  and  ignores  19  and  17

Hint:  Use  map
'''

a = eval(input('Enter first list: '))   # Enter first list: [10 , 20 , 15 , 18 , 19 , 17]
b = eval(input('Enter second list: '))  # Enter second list: [1 , 5 , 3 , 2]
m = map(lambda x , y : x * y , a , b) 
print('Addition  tuple :' , list(m))    # Addition  tuple : [10, 100, 45, 36]


Program-21
# filter  inside  map
import  time
a = [10 , 20 , 15 , 12 , 18 , 5 , 14 , 25 , 17]
m = map(lambda  y  :   y + y ,  filter(lambda  x  :  x >= 15 , a))
while   True:
	try:
		print(next(m))  # 40 <next line> 30 <next line> 36 <next line> 50 <next line> 34
		time . sleep(1)
	except:
		break


Program-22
# map  inside  filter
import   time
a = [10 , 20 , 15 , 12 , 18 , 5 , 14 , 25 , 17]
f = filter(lambda  y  :   y  % 2 == 0 , map (lambda  x : x ** 2 , a))
while   True:
	try:
		print(next(f))  # 100 <next line> 400 <next line> 144 <next line> 324 <next line> 196
		time . sleep(1)
	except:
		break


Program-23
'''
Write  a  program  to  determine  largest  element  of  the  list  with  reduce()  function

Let  list   be  [10 , 20 , 15 , 30 , 25 , 40 , 35]
What  is   the  largest  element  of  list ?  ---> 40

Hint:  Use  reduce()  function
'''

from functools import reduce
list = eval(input('Enter list of numbers (or) strings :'))  # Enter list of numbers (or) strings :[10 , 20 , 15 , 30 , 25 , 40 , 35]
ans  = reduce(lambda x , y : x if x > y else y , list)
print('Largest  element  :' , ans)  # Largest  element  : 40


Program-24
# Find  outputs
from  functools  import  reduce
a = [ 10 , 20 , 15 , 5 , 12 , 18 , 25 , 14]
ans = reduce( lambda  x , y  : x + y , map(lambda  y :  y ** 2 , filter(lambda  x  :  x  >= 15 , a)))
print(ans)  # 1574
