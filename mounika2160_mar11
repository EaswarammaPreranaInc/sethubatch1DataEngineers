#program 1
# isupper()  method  demo  program  

print('HYd' . isupper())  #  False  due  to  'd'
print('HYD' . isupper()) #  True  becoz  there  are  no  lowercase  alphabets
print('9247' . isupper()) #   False  becoz  there  are  no  uppercase  alphabets
print('RAMA  RAO' . isupper())  #  True  becoz  there  are  no  lowercase  alphabets
print('+-$' . isupper())  #   False  becoz  there  are  no  uppercase  alphabets
print('HYD123' . isupper())   #  True  becoz  there  are  no  lowercase  alphabets
print('HYD+-$' . isupper())   #  True  becoz  there  are  no  lowercase  alphabets
print('' . isupper())   #   False  becoz  there  are  no  uppercase  alphabets
print('A2#' . isupper())   #  True  becoz  there  are  no  lowercase  alphabets

isspace()  method
---------------------
1) return  True ?  --->  When  every  character  of  the  string  is  white  space  character
2)return  False ?  --->  When  at  least  one  character  of  the  string  is  not  a  white  space
                                                               i.e.  Alphabet, digit (or)  special  character

#program 2
# Find  outputs 

a , b , c = 25 , 10.8 , 'Hyd'
print('a  :  {}  \t  b  :  {}  \t  c  :  {}  '  .  format(a , b , c))              #a  :  25          b  :  10.8      c  :  Hyd
print('a  :  {0}  \t  b  :  {1}  \t  c  :  {2}  ' . format(a , b , c))             #a  :  25          b  :  10.8      c  :  Hyd
print('a  :  {2}  \t  b  :  {1}  \t  c  :  {0}  ' . format(a , b , c))             #a  :  Hyd         b  :  10.8      c  :  25
print('a  :  {2}  \t  b  :  {2}  \t  c  :  {2}  ' . format(a , b , c))             #a  :  Hyd         b  :  Hyd       c  :  Hyd
print('a  :  {x}  \t  b  :  {y}  \t  c  :  {z}  ' . format(x = a , y = b , z = c)) #a  :  25          b  :  10.8      c  :  Hyd
print('a  :  {x}  \t  b  :  {y}  \t  c  :  {z}  ' . format(z = a , y = b , x = c)) #a  :  Hyd         b  :  10.8      c  :  25
print('a  :  {z}  \t  b  :  {z}  \t  c  :  {z}  ' . format(z = a , y = b , x = c)) #a  :  25          b  :  25        c  :  25


#program 3

#Write  a  program  to  determine  user  input  is  alphabet , digit , white space  or  special  character

1) What  are  the  three  outputs  if  input  is  'A' ?  ---> Alphanumeric  character , Alphabet character , Upper case  alphabet

2) What  are  the  three  outputs  if  input  is  'a' ?  --->  Alphanumeric  character , Alphabet character , lower case  alphabet

3) What  are  the  two  outputs  if  input  is  '7' ?  --->  Alphanumeric  character , digit  character

4) What  is  the  output  if  input  is  '$' ?  --->  Special  character

5) What  is  the  output  if  input  is  <spacebar> ?  --->  White  space

6) What  is  the  output  if  input  is  <tab>  key ?  --->   White  space

7) What  is  the  output  if  input   is   <enter>   key ?  ---> white space

a=input("enter the no:")
if len(a)==1:
    if a.isalnum():
         print("Alphanumeric  character")
    if a.isalpha():
         print("Alphabet character")
    if a.isupper():
         print("Upper case  alphabet")
    elif a.islower():
         print("lower case  alphabet")
    elif a.isdigit():
         print("Digit character")
    elif a.isspace():
        print("White  space")
    else:
        print("special character")
else:
    print("enter only one input")

output:
Enter  any  character  :  A
Alpha  Numeric  Character
Alphabet  Character
Upper  case  Alphabet

#program 4
#Write  a  program  to  reverse  a  string  without  slice

1) Let  input  be   Hyd
    What  is  the  output ?  ---> dyH

2)   H       y      d
      -3     -2     -1

      i       a[-i]            b
    ---------------------------------------
                                ''
     1         'd'            '' + 'd' = 'd'
     2         'y'            'd' + 'y' = 'dy'
     3         'H'            'dy' + 'H' = 'dyH'
  ---------------------------------------------

  
a=input("enter the string:") #Hyd
sum=''
for i in range(1,len(a)+1):
    sum+=a[-i]
print('Reverse  String :  ' , sum )

output:
Enter  any  string : Rama Rao
Reverse  String :   oaR amaR

#program 5
#Write  a  program  to  reverse  order  of  words  in  the  sentence  without  slice

1) Let  input  be  Hyd  is  green  city
    What  is  the  output ?  ---> city   green   is   Hyd

2) What  is  the  result  of  input . split() ?  --->  ['Hyd' , 'is' , 'green' , 'city']   --->   Assume  that  it  is  'b'

3) i        b[-i]           c
   ---------------------------------------------
                              ''
    1         'city'       '' + 'city' + ' ' =  'city '
    2         'green'    'city ' + 'green' + ' ' =  'city green '
    3         'is'           'city green ' + 'is' + ' ' = 'city green is '
    4         'Hyd'       'city green is ' + 'Hyd' + ' ' = 'city green is Hyd '
   --------------------------------------------------------

a= input(" enter any sentence:")
b=a.split()
sum=''
for i in range(1,len(b)+1):
    sum+=b[-i]+' '
print('reverse order of words :',sum)

output:
Enter  any  sententce : students are getting bored
Reverse  order  of  words :  bored getting are students

#program 6
#Write  a  program  to  reverse  each  word  of  the  sentence

1) Let  input  be  Hyd  is  green  city
    What  is  the  output ?  ---> dyH si neerg ytic

2) Hint: Use  for  each  loop  and  also  slice

a = input('Enter  any  sentence  :  ')
b = a . split()
c = ''
for  x   in   b:
	c  +=  x[ : : -1]  + ' '
print(c)

output: 
Enter  any  sentence  :  hyd is green city
dyh si neerg ytic

#program 7
#Write  a  program  to  sort  string  in  alphabetical  order

Let  input  be  RAJESH
What  is  the  output ?  --->  AEHJRS

Hint:  Use   sorted()  function  and   join()  method

a = input("Enter  any  string  :  ")
b = sorted(a)
c = '' . join(b)
print('Sorted  string  :   ' ,  c)

output:
Enter  any  string  :  RAJESH
Sorted  string  :    AEHJRS

 
#program 8

#Write  a  program  to  sort  string  such  that  alphabets  in  alphabetical  order  and  digits  in  ascending  order

Let  input  be  Z9K3PA7D51
What  is  the  output ?  ---> ADKPZ13579

1) Hint:  sorted()  function , isalpha() , isdigit()  and   join()  method

a = input('Enter  string  with  alphabets  and  digits  :  ')
b = sorted(a)
alpha = digit = ''
for  ch   in   b:
	if  ch . isalpha():
		alpha  += ch
	elif  ch . isdigit():
		digit  += ch
# End  of  for  loop
print('Result  :  ' ,  alpha + digit)

output:-
enter the string:Z9K3PA7D51
ADKPZ13579


#program 9

# What  are  the  outputs  if  input  is   [25 , 10.8 , 'Hyd' , True]   

a = input('Enter  list  :  ')
print(type(a)) #<class 'str'>
print(a)  #['25' , 'Hyd' , True]
b = eval(a)  #[25 , Hyd , True]
print(b)  #[25 , 10.8 , 'Hyd' , True]
print(type(b)) #<class list>


#program 10
#  Find  outputs 

a = [10, 20, 15, 18]
b = a # ref 'b'points to list 'a'
print(a  is  b)# True
print(a  ==  b)#True 
b[2] = 12 
print(a) #[10,20,12,18]

#program 11
#  Find  outputs 

a = [10 , 20 , 15 , 18]
b = [100 , 200 , 150]
print(a + b ) #[10,20,15,18,100,200,150]
print(a + 5) #error becoz  list to int can not be concateted
print(a + '5') #error becoz  string to list can not be concateted
print([10 , 20] + (30 , 40)) #error becoz  list to tuple can not be concateted

#program 12
# Find  outputs

list = [25 , 10.8 , 'Hyd' ,  True]
a , *b , c = list  #  Unpacks  list  into  3  elements
print('a : ' , a) #  a :  25
print('b : ' , b)#   b : [10.8 , 'Hyd']
print('c : ' , c) #  c : True
print(type(b))#  <class  'list'>
x , *y = list #unpack list into 2 elements
print('x : ' , x) #x:23
print('y : ' , y)#y:[ 10.8 , 'Hyd' ,  True]
*p , q = list  #unpack list into 2 elements
print('p : ' , p) #[25 , 10.8 , 'Hyd']
print('q : ' , q)#True

#program 13
#Find  outputs  

list = [25 , 10.8 , 'Hyd' , True]
a , b , c , d , e = list
a , b , *c , d , e = list
print('a : ' , a)# a:25
print('b : ' , b)#b:10.8
print('c : ' , c)#c:empty list
print('d : ' , d)#d:Hyd
print('e : ' , e)#e:True
a , b , *c , d , e , f = list #error

#program 14
# Find  outputs  

list = [25 , 10.8 , 'Hyd' , True]
a , b , _  , d = list
print('a : ' , a)#a:25
print('b : ' , b)#b:10.8
print('_ :  ' , _)#c:Hyd
print('d : ' , d)#d:True

#program 15
# Find  outputs 

list = [25 , 10.8 , 'Hyd' , True , 3 + 4j]
a , b , a , d , a = list
print('a : ' , a) #3+4j
print('b : ' , b) #10.8
print('d : ' , d) #True

#program 16
# Find  outputs 

list = [25 , 10.8 , 'Hyd' , True , 3 + 4j]
a , b ,  _ , d , _  = list
print('a : ' , a) #25
print('b : ' , b) #10.8
print('_ : ' , _) #3+4j
print('d : ' , d) #True
print('_: ' , _)  #3+4j

#program 17
# Identify  error 

list = [25 , 10.8 , 'Hyd' , True , 3 + 4j]
a , *b , c , *d , e  = list # error

#program 18
# Find  outputs  

list = [[25 , 10.8] , 'Hyd' , True]
a , b , c = list
print('a :  ' , a) #[25,10.8]
print('b :  ' , b) #Hyd
print('c :  ' , c) #True

#program 19
# Find  outputs  

list = [[25 , 10.8] , 'Hyd' , True]
[a , b] , c , d = list
print('a : ' , a) # 25
print('b : ' , b) # 10.8
print('c : ' , c) # Hyd
print('d : ' , d) # True
a , b , c , d = list #error due to few element in the list

#program 20
# Comparing  Lists

a = [10 , 20 , 15 , 18]
b = [10 , 20 , 15 , 18]
c = [10 , 20 , 25 , 9]
d = [10 , 20 , 7 , 22]
print(a == b) #  True becoz  lists  'a'  and  'b'  have  same  elements
print(a  is   b)#   False  becoz  'a'  and  'b'  point  to  different  lists
print(a < c)   #  True  becoz  15 < 25
print(a > d)  #  True  becoz  15 >  7
print(a >= c)  #  False  becoz  15 is  not  >=  25
print(a <= d)   #  False  becoz  15 is  not  <=  7
print(a != c)  #  True  becoz  15  !=  25
print(a != b) #  False  due to  same  elements
print(a == c)   #  False  becoz  15 is  not  =  25

#program 21
# Comparing  Lists  

a = [10 , 20 , 15 , 18]
b = [20 , 18 , 15 , 10]
print(a == b)  #False  becoz  10 is  not  = 20
print(a  is   b) #  False  becoz 'a'  and  'b'  point  to different  lists

#program 22
#  len()  function demo   program  

a = [ 25, 10.8, 'Hyd', True]
print(len(a)) #4
b = []
print(len(b))#0
c = [[10 , 20] , 30 , 40]
print(len(c)) #3
'''
What  does  len(list)  do ?  --->  Returns  number  of  elements  in  the  list'''

#program 23
# sum()  function  demo  program 

a = [25 , 10.8 , True]
print(sum(a))  #  25 + 10.8 + True = 36.8
b= [3 + 4j , 5 + 6j]
print(sum(b))  #  8 + 10j
c = [25 , 10.8 , True , 3 + 4j , False]
print(sum(c))  #  39.8 + 4j
d = [10 , 20 , 15 , 18]
print(sum(d)) #   63
e = [25 , 10.8 , 'Hyd' , True]
print(sum(e))  #  Error  becoz  number  and  str  can  not  be  added

'''
What  does  sum(list)  do ?  --->  Returns  sum  of  list  elements'''

#program 24
#  Find  outputs

a = [[10 , 20 , 15 , 1850,60,70]]
#print(sum(a))  #   0 + [10,20,15,18] throws  error
print(sum(a[0]))  #  How  to  determine  sum  of  inner  list  elements  --->  sum([10,20,15,18])  --->  63
print(sum(*a))  #  How  to  determine  sum  of  inner  list  elements  in  another  way  --->  sum([10,20,15,18])  --->  63

#program 25
# max()  and  min()  functions  demo  program  

a = [10 , 20 , 15 , 18 , 30, 5 , 12]
print(max(a))  #  30
print(min(a))  #  5
b = ['Rama' , 'Sita' , 'Rajesh' , 'Kiran' , 'Amar' , 'Vamsi' , 'Manohar']
print(max(b)) #  Vamsi
print(min(b)) #  Amar
c = [25 , 10.8 ,  3 + 4j , True]
#print(max(c))  #  Error  due  to  complex  number
d = [25 , '35']
#print(max(d))  #  Error  due  to  number  and  string
#print(max([])) #  Error  due  to  empty  list
#print(min([]))  #  Error  due  to  empty  list

'''
1) What  does  max(list)  do ?  --->  Returns  largest  element  of  the  list

2) What  does  min(list)  do ?  --->  Returns  smallest  element  of  the  list'''

#program 26
# list()  function  demo  program

a = (10 , 20 , 15, 18)
b = list(a)  #  Converts  tuple  to  list
print(b)#   [10,20,15,18]
print(type(b))  #  <class  'list'>
print(a  is  b)  # False  becoz  they  point to  different  objects
print(a == b)  # False  becoz  they  point to  different  objects


#program 27
#  Find  outputs 

a = range(4 , 10 , 2)
b = list(a) #converts range obj to list
print(b) # [4,6,8]
print(type(b)) #<class'list>]
a = list('Vamsi')
print(a) #['v','a','m','s','i']
a = list() # returns to empty list
print(a) #[]
print(list(25)) #error becoz 25 is not a seq
print(list(10.8)) #error becoz 10.8 is not a seq
print(list(True)) #error becoz True is not a seq
print(list(None)) #error becoz none is not a seq

'''
1) What  does  list(sequence)  do ?  --->  Converts  sequence  to  list  and  returns  list

2) What  does  list(no-args)  do ?  --->  Returns  an  empty  list

3) What  does  list(non-sequence)  do ?  --->  Throws  error'''


#program 28
# Find  outputs 

a = ((10 , 20) , (30 , 40 , 50) , (60 , 70 , 80 , 90))  #  Nested  tuple
print(list(a))  # Converts   nested  tuple  to  list  of   tuples  i.e.  [(10 , 20) , (30 , 40 , 50) , (60 , 70 , 80 , 90)]
b = { (10 , 20) , (30 , 40 , 50) , (60 , 70 , 80 , 90)}  #  set  of  tuples
print(list(b))   # Converts   set  of    tuples  to  list  of   tuples  i.e.  [(10 , 20) , (30 , 40 , 50) , (60 , 70 , 80 , 90)]
c = ([10 , 20] , (30 , 40) , {50 , 60})  #  Nested  sequence
print(list(c))     # Converts   nested  sequence  to  list  of  sequence  i.e.  [[10 , 20] , (30 , 40) , {50,60}]


#program 29
# Find  outputs  

a = ['Rama',  'Rajesh',  'Amar',  'Sita',  'Vamsi'  ,  'Kiran'  , 'Rama  Rao']
b = sorted(a)
print(b)  #  ['Amar', 'Kiran', 'Rajesh', 'Rama', 'Rama  Rao', 'Sita', 'Vamsi']
c = sorted(a , reverse = True)
print(c) # ['Vamsi', 'Sita', 'Rama  Rao', 'Rama', 'Rajesh', 'Kiran', 'Amar']
print(a)  #  ['Rama', 'Rajesh', 'Amar', 'Sita', 'Vamsi', 'Kiran', 'Rama  Rao']


#program 30
# all()  function demo  program  

a = [12 > 10 , 5 < 20 , 30 == 30]
print(all(a))  #  True
b = [9 >= 6 , 12 <= 9 , 6 == 6]
print(all(b))  #  False
c = [25 , 10.8 , '' , True , 3+4j , 'Hyd']
print(all(c)) #  False  due  to  empty  string
d = [10 , 0 , 20]
print(all(d)) #  False  due to  0
e = []
print(all(e))  #  True  becoz  there  are  no  false  elements    in  list  'e'


'''
all()  function
-----------------
1) What  does  all(list)  do ?  --->  Returns  True  when  every  element of  the  list  is  True  and  False  otherwise

2) When  does  it  return  False ?  --->  When  at  least  one  element  of  the  list  is  False

3) if  cond1  and  cond2  and  cond3  and  cond4:
    How  to  reduce  the  above  four  conditions  to  a  single  condition ?  --->  if  all([cond1 , cond2 , cond3 , cond4]): '''


#program 31
# any()  function demo program  

a  = [12 > 18 , 5 < 20 , 35 == 30]
print(any(a))  #  True   due  to  2nd  element
b = [12 > 18 , 25 < 20 , 35 == 30]
print(any(b)) #  False
c = [0 , 0.0 , '' , 25 , 0 + 0j , False]
print(any(c))   #  True   due  to  4th  element
d = [0 , 0.0 , '' , 0 + 0j , False]
print(any(d))#  False
e = []
print(any(e))#  False  becoz  there  are  no  True  elements  in  the  list


'''
any()   function
-------------------
1) What  does  any(list)  do ?  --->  Returns  True  when  at  least  one  element  of  the  list  is  True  and  False  otherwise

2) When  does  it  return  False ?  ---> When  every  element  of  the  list  is  false

3) if  cond1  or  cond2  or  cond3  or  cond4:
     How  to  reduce  the  above  four  conditions  to  a  single  condition ?  --->   if  any([cond1 , cond2 , cond3 , cond4]):

4) all()  and  any()  functions  are  used  as  an  alternative  when  there  are  too  many  conditions  in  if  and  while'''
