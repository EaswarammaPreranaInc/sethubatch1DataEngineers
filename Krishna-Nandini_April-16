Program-1
# Find   outputs
from  itertools  import  count
c = count()
print('While  loop')  # While  loop
while   True:
        x = next(c)
        if   x > 9:
                break
        print(x)   # 0 to 9
print('For  loop') # For  loop
for  x  in  count():
	if  x  >  20:
		break
	print(x)  # 0 to 20
#end  of  for  loop
print('Element :  ' , end = '\t')
print(next(count()))
c = count()
print(*c)

'''
Output:
While  loop
0
1
2
3
4
5
6
7
8
9
For  loop
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
Element :       0
'''


Program-2
# Find  outputs
from  itertools  import  count
def  disp(cnt):
        for  i  in   range(4):
                print(next(cnt) , end = '\t')  
        print()
#end  of  the  function
a = count(start = 10)
disp(a)  # 10      11      12      13
b = count(start = 10 , step = 5)
disp(b)  # 10      15      20      25
c = count(start = 10 , step = -2.5)
disp(c)  # 10      7.5     5.0     2.5
d = count()
disp(d)  # 0       1       2       3


Program-3
# Find  outputs
from   itertools    import    count
cnt = count()  # Empty object
list = [10 , 20 , 15 , 18]
z1 = zip(list , cnt)  # Empty object
print('While  loop')  # While  loop
while   True:
        try:
			print(next(z1)) # (10, 0) <next line> (20, 1) <next line> (15, 2) <next line> (18, 3)
        except:
			 break
z2 = zip(list , cnt)  # 2nd object to iterate again
print('for  loop')    # for  loop
for  x   in    z2:
        print(x)      # (10, 4) <next line> (20, 5) <next line> (15, 6) <next line> (18, 7)
z3 = zip(list , cnt)  # 3rd object to iterate again
print('Next  element :  ' , next(z3))   # Next  element :   (10, 8)
print('*z3 :  ' ,  *z3)   # *z3 :   (20, 9) (15, 10) (18, 11)
z4 = zip(list , cnt)      # 4th object to iterate again
print('Next  element  : ' ,  next(z4))  # Next  element  :  (10, 12)


Program-4
# Find  outputs
from   itertools    import    count
cnt = count()   # Empty object
list = [10 , 20 , 15 , 18]
z1 = zip(cnt , list)  # Empty object
print('while  loop')      # while  loop
while   True:
    try:
        print(next(z1))  # (0, 10) <next line> (1, 20) <next line> (2, 15) <next line> (3, 18)
        except:
                break
z2 = zip(list , cnt)  # 2nd object to iterate again
print('for  loop')    # for  loop
for  x   in    z2:
        print(x)      # (10, 5) <next line> (20, 6) <next line> (15, 7) <next line> (18, 8)
z3 = zip(cnt , list)  # 3rd object to iterate again
print(next(z3))       # (9, 10)
print(*z3)            # (10, 20) (11, 15) (12, 18)
z4 = zip(list , cnt)  # 4th object to iterate again
print(next(z4))       # (10, 14)


Program-5
# Find  outputs
from  itertools  import  zip_longest
import   time
def  disp(z):
	while   True:
		try:
			print(next(z))
			time . sleep(1)
		except:
			break
list = [10 , 20 , 30 , 40]
z1  =  zip(range(7) , list)
print(type(z1))   # <class 'zip'>
disp(z1)   # (0, 10) <next line> (1, 20) <next line> (2, 30) <next line> (3, 40)
z2 = zip_longest(range(7) , list)
print(type(z2))   # <class 'itertools.zip_longest'>
disp(z2)   # (0, 10) <next line> (1, 20) <next line> (2, 30) <next line> (3, 40) <next line> (4, None) <next line> (5, None) <next line> (6, None)


Program-6
# Find  outputs
import   time
from    itertools    import  cycle
list = [10 , 20 , 30 , 40]
c = cycle(list)
print(type(c))
while   True:
	print(next(c))
	time . sleep(1)

'''
Output:
<class 'itertools.cycle'>
10
20
30
40
10
20
30
40
10
and so on to infinity
'''


Program-7
# Find  outputs
import  time
from  itertools  import  repeat
r = repeat(25 , times = 3)    # 25 is repeated 3 times
print('1st  repeat  object')  # 1st  repeat  object
while   True:
	try:
		print(next(r))            # 25 <next line> 25 <next line> 25
		time . sleep(1)
	except:
		break
print('2nd  repeat  object')  # 2nd  repeat  object
r  =  repeat('Hyd')           # Hyd is repeated infinite times because times is not mentioned
while   True:
	   print(next(r))           # Hyd <next line> Hyd <next line> Hyd <next line> Hyd <next line> and so on to infinity
	   time . sleep(1)


Program-8
# Find  outputs
import  time
from  itertools  import  repeat
m = map(pow , range(10) ,  repeat(2))  # squares of 0 to 9
while   True:
	try:
		print(next(m))
		time . sleep(1)
	except:
		break

'''
Output:
0
1
4
9
16
25
36
49
64
81
'''


Program-9
# Find  outputs
import  time
def  disp(itr):
	while  True:
		try:
			print(next(itr))
			time . sleep(1)
		except:
			break
from  itertools  import  combinations,permutations
list = ['A' , 'B' , 'C' , 'D']
c = combinations(list , 3)
print('Different  Combinations')
disp(c)
print('Different   Permutations')
p = permutations(list , 3)
disp(p)

'''
Output:
Different  Combinations
('A', 'B', 'C')
('A', 'B', 'D')
('A', 'C', 'D')
('B', 'C', 'D')
Different   Permutations
('A', 'B', 'C')
('A', 'B', 'D')
('A', 'C', 'B')
('A', 'C', 'D')
('A', 'D', 'B')
('A', 'D', 'C')
('B', 'A', 'C')
('B', 'A', 'D')
('B', 'C', 'A')
('B', 'C', 'D')
('B', 'D', 'A')
('B', 'D', 'C')
('C', 'A', 'B')
('C', 'A', 'D')
('C', 'B', 'A')
('C', 'B', 'D')
('C', 'D', 'A')
('C', 'D', 'B')
('D', 'A', 'B')
('D', 'A', 'C')
('D', 'B', 'A')
('D', 'B', 'C')
('D', 'C', 'A')
('D', 'C', 'B')
'''
