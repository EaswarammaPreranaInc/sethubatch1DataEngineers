# (1) Find outputs  (Home  work)
print('green' in 'Hyd is green city') #True
print('day' in 'Sankar dayal sarma')  #True
print('Green' in 'Hyd is green city') #False
print('d is' in 'Hyd is green city')  #True
print('dis' in 'Hyd is green city')   #False
print('iniv' in 'Srinivas')           #True
print('iniv' not in 'Srinivas')       #False


''' (2) (Home  work)
Slice  demo  program
0      1       2       3      4       5       6       7
R      a       m       a              R       a       o
-8    -7      -6      -5     -4      -3      -2      -1
'''
a = 'Rama Rao'
print(a[:7:2])   #a[0:7:2]---> String from indexes 0 to 6 in steps of 2 i.e. Rm a
print(a[:7])     #a[0:7:1]---> String from indexes 0 to 6 in steps of 1 i.e. Rama Ra
print(a[2:4])    #a[2:4:1]---> String from indexes 2 to 3 in steps of 1 i.e. ma
print(a[2:])     #a[2:8:1]---> String from indexes 2 to 7 in steps of 1 i.e. ma Rao
print(a[:4])     #a[0:4:2]---> String from indexes 0 to 3 in steps of 1 i.e. Rama
print(a[::2])    #a[0:8:2]---> String from indexes 0 to 7 in steps of 2 i.e. Rm a
print(a[-6:-1])  #a[-6:-1:-1]---> String from indexes -6 to -1 in steps of -1 i.e. ma Ra
print(a[-6:])    #a[-6:-1:1]---> String from indexes -6 to -1 in steps of 1 i.e. ma Rao
print(a[:-4:-1]) #a[-1:-4:-1]---> String from indexes -1 to -4 in steps of -1 i.e. oaR
print(a[-3:-1])  #a[-3:-9:-1]---> String from indexes -3 to -8 in steps of -1 i.e. Ra
print(a[-3:])    #a[-3:8:1]---> String from indexes -3 to 8 in steps of 1 i.e. Rao
print(a[::])     #a[0:8:1]---> String from indexes 0 to 7 in steps of 1 i.e. Rama Rao
print(a[:])      #a[0:8:1]---> String from indexes 0 to 7 in steps of 1 i.e. Rama Rao
print(a[::-1])   #a[-1:-9:-1]---> String from indexes -1 to -8 in steps of -1 i.e. oaR amaR
print(a[::-2])   #a[-1:-9:-2]---> String from indexes -1 to -8 in steps of -2 i.e. oRaa
print(a[-2::-2]) #a[-2:-9:-2]---> String from indexes -2 to -8 in steps of -2 i.e. a mR
print(a[2:8])    #a[2:8:1]---> String from indexes 2 to 7 in steps of 1 i.e. ma Rao
print(a[2:8:-1]) #a[2:8:-1]---> String from indexes 2 to 7 in steps of -1 i.e. ''
print(a[:-6:-1]) #a[-1:-6:-1]---> String from indexes -1 to -5 in steps of -1 i.e. oaR a
print(a [2:-3])  #a[2:-3:1]---> String from indexes 2 to -4 in steps of 1 i.e. 'ma '
print(a[1:6:2])  #a[1:6:2]---> String from indexes 1 to 5 in steps of 2 i.e. aaR
print(a[:-5:-5]) #a[-1:-5:-5]---> String from indexes -1 to -4 in steps of 2 i.e. o
print(a[2:-5])   #a[2:-5:1]---> String from indexes 2 to -6 in steps of 1 i.e. m
print(a[2:-5:2]) #a[2:-5:2]---> String from indexes 2 to -6 in steps of 2 i.e. m
print(a[:0:-1])  #a[-1:0:-1]---> String from indexes -1 to 1 in steps of -1 i.e. oaR ama
print(a[-5:0:-2])#a[-5:1:-2]---> String from indexes -5 to 1 in steps of -2 i.e. aa


'''
(3) Program to concatenate two strings separated by spacebut swap the first two chapacters of each string.
Assume that each string contains a minimum of two characters.
'''
a=input('Enter first string: ')
b=input('Enter second string: ')
res=b[:2]+a[2:]+' '+a[:2]+b[2:]
print('Resullt:',res)

#Output
Enter first string: Java
Enter second string: Python
Resullt: Pyva Jathon


'''
(4) Print first two and the last two characters of the string and 
Print an empty string if string contains less than four characters.
'''
a=input('Enter any string: ')
if len(a)<4:
	print('')
else:
	print('Result:',a[:2]+a[-2:len(a)])

#Output
Enter any string: PYTHON
Result: PYON

Enter any string: HYD
      #empty string


# (5) Print characters of the string in forward and reverse directions without slice
a=input('Enter the string: ')
print('String in forward:')
for i in range(len(a)):
	print(f'Character at index {i}: {a[i]}')
print('String in reverse:')
for i in range(1,len(a)+1):
	print(f'Character at index {-i}: {a[-i]}')

#Output
Enter the string: VAMSI
String in forward:
Character at index 0: V
Character at index 1: A
Character at index 2: M
Character at index 3: S
Character at index 4: I
String in reverse:
Character at index -1: I
Character at index -2: S
Character at index -3: M
Character at index -4: A
Character at index -5: V


# (6) Print characters at even and odd indexes without using slice
a=input('Enter any string: ')
odd=even=''
for i in range(len(a)):
	if i%2==0:
		even+=a[i]
	else:
		odd+=a[i]
print('Characters at even indexes:',even)
print('Characters at odd indexes:',odd)

#Output
Enter any string: Rama Rao
Characters at even indexes: Rm a
Characters at odd indexes: aaRo


'''
(7) Write a program to take
input as A 4 B 3 C 2 $ 5
(index ->0 1 2 3 4 5 6 7)
print result as AAAABBBCC$$$$$
'''
try:
	a=input('Enter any string with alternate character and digit: ')
	res=''
	for i in range(0,len(a),2):
		res+=a[i]*int(a[i+1])
	print('Result:',res)
except ValueError:
	print('Please enter alternate char and digit')

#Output
Enter any string with alternate character and digit: A1B2C3$4
Result: ABBCCC$$$$

Enter any string with alternate character and digit: 1A2B_
Please enter alternate char and digit

Enter any string with alternate character and digit: HYD
Please enter alternate char and digit
