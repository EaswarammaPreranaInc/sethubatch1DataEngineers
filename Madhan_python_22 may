#22/5/2025 

''' 
#1.(Home  work)
1) 1st  input  ---> 'Hyd is green city'
    2nd  input  --->  'Green'
	What  are  the  outputs  ---><class 're.Match'> (7,11)

2) 1st  input  --->  'Hyd is green city'
    2nd  input ---> 'red'
    What  are  the  outputs  ---> <class 'NoneType'> red is not found
'''

'''
import   re
string = input('Enter  any  string  :  ')
pattern = input('Enter  pattern  :   ')
m  =  re . search(pattern , string , re.IGNORECASE)
print(type(m)) #<class 're.Match'>
if  m:
	print(F'{m . group()}  is found  between  indexes  {m . start()}   and   {m . end() - 1}')
else:
	print(pattern , ' is  not  found ')
	
'''


#2. Find  outputs  (Home  work)

'''
import  re
m = re . search('^learn' , 'Learning Python is simple' , re.IGNORECASE)
if  m:
	print('String  starts  with' , m . group()) #String  starts  with Learn
else:
	print('String  does  not  start  with  learn')
m = re . search('Simple$' , 'Learning Python is simple' , re.IGNORECASE)
if   m:
	print('String  ends  with ' , m . group()) #String  ends  with simple
else:
	print('String  does  not  end  with  Simple')
	
'''



'''  
#3.(Home  work)
What  are  the  outputs
1st  input  --->  'Hyd is green city. Hyd IS hitec city. Hyd Is hiS city'
2nd  input  --->  'is'
What  are  the  outputs  --->
'''

'''
import re
string  =  input('Enter  any  string  :  ')
pattern = input('Enter  pattern  to  be  searched : ')
itr = re.finditer(pattern , string , re.IGNORECASE)
ctr = 0
while  True:
	try:
		m = next(itr)
		print(F'{m . group()}  is found  between   indexes   {m . start()}  and {m . end() - 1}') #(4,5) (23,24),(42,43),(46,47)
		ctr += 1
	except  StopIteration:
		break
print('Found ' , ctr ,' times') #4

'''


#4.Find  outputs (Home  work)

'''
import  re
itr  =  re.finditer('[IEY]' , 'Hyd Is greEn citY', re.IGNORECASE)
while  True:
	try:
		m = next(itr)
		print(m.group() , 'is  at index : ' , m.start()) #y 1,I 4 ,e 9,E 10,i 14,Y 16
	except  StopIteration:
		break
		
'''




#5. Find  outputs (Home  work)

'''
import   re
itr  =  re.finditer('[A-Za-z0-9]' , 'm$9 K,d%5@E&')
while  True:
	try:
		m = next(itr)
		print(m.group() , ' is  at  index :  ' , m.start()) #m 0,9 2,K 4,d 6,5 8,E 10 
	except:
		break
		
'''


#6.Find  outputs (Home  work)

'''
import  re
string  =  'z7.Q-$2 b[9.a%6$G&k.%'
print(re.findall ('[a-z]'  ,  string)) # ['z','b','a','k']
print()
print(re.findall ('[0-9]'  ,  string)) #['7','2','9','6']
print()
print(re.findall ('[^A-Za-z0-9]'  ,  string)) #['.','-','$',' ','[','.','%','$','&','.','%']
print()
print(re.findall ('.'  ,  string)) #['z','7','.',Q','-','$',2',' ','b','[','9','.','a','%','6','$','G','&','k','.','%']
print()
print(re.findall ('[.]'  ,  string)) #['.','.','.']
print()
print(re.findall ('[$]'  ,  string)) #['$','$']
print()
print(re.findall ('[%]'  ,  string)) #['%','%']
print()
print(re.findall ('[az-]'  ,  string)) #['z','-','a']

'''


''' 
#7.
(Home  work)
1) 1st  string --->  'Sankar  dayal  sarma'
    2nd  string ---> 'san'
    What  are  the  outputs ?  ---> Sankar  dayal  sarma starts with San

2) 1st  string  ---> 'Hyderabad'
    2nd  string  --->  'Sec'
    What  are  the  outputs ?  ---> Hyderabad does not start with  Sec
'''

'''
import re
string  =  input('Enter  any  string : ')
pattern = input('Enter  any pattern : ')
m  =  re.match(pattern , string , re.IGNORECASE)
if  m:
	print(string  ,  'starts  with ' , m.group()) #1.San
else:
	print(string , 'does not start with' , pattern) 

'''


#8.Identify  Error  (Home  work)

'''
import re
string  =  input('Enter  any  string : ')
pattern = input('Enter  any pattern : ')
m  =  re.match(^pattern , string , re . IGNORECASE) #we can't use ^ with str object use  only with string
if  m:
	print(string  ,  'starts  with ' , m . group())
else:
	print(string , 'does not start with' , pattern)

'''


'''  
#9. (Home   work)
1) What  are  the  outputs  if  inputs  are  'HYD'  and  'hyd' ?  ---> Same  strings  after  ignoring  the  case

2) What  are  the  outputs  if  inputs  are  'HYD'  and  'SEC' ?  ---> Different  string
'''

'''
import  re
s1 = input('Enter first string  : ')
s2 = input('Enter second string  : ')
m  = re.fullmatch(s1 , s2 , re.IGNORECASE)
if  m:
        print('Same  strings  after  ignoring  the  case') #1.
else:
        print('Different  strings') #2.

'''


'''
#10.
Write  a  regular  expression  to  represent  a  10-digit  mobile  number

Rules:
1) It  should  be  a  10-digit  number

2) First  digit  can  be  6 , 7 , 8  or  9

3) Number  may  start  with  0  (or)  +91

4) Which  of  the  following  are  valid ?
     a) 5948250500  --->   Invalid  becoz  first  character  '6'  is  not  between  '7'  and  '9'
     b) 994825050 --->  Invalid  becoz  length  of  the  string  is  not  10
     c) 9948-250500  --->  Invalid  due  to  '-'
     d) 9948250500  ---> Valid
     e) 09948250500  ---> Valid  becoz  number  may  start  with  '0'
     f) +919948250500 ---> Valid  becoz  number  may  start  with  +91
     g) 919948250500  --->  Inavlid  becoz  length  of  the   string  is  not  10

5) What  is  the  regular  expression  for  the  above  rules ?  --->   (0|[+]91)?[6789][0-9]{9}

6) Which  function  should  be  used ?  ---> fullmatch()  function
'''

'''
import re 
mobile=input("Enter 10  digit mobile number: ")
m=re.fullmatch('(0|[+]91)?[6789][0-9]{9}',mobile)

if m:
    print('Valid mobile number')
    
else:
    print('Invalid mobile number')

'''
